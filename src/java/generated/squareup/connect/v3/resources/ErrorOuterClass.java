// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: squareup/connect/v3/resources/error.proto

package squareup.connect.v3.resources;

public final class ErrorOuterClass {
  private ErrorOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:squareup.connect.v3.resources.Error)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
     *
     * <pre>
     * Type is a machine-readable error code.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
     *
     * <pre>
     * Type is a machine-readable error code.
     * </pre>
     */
    squareup.connect.v3.resources.ErrorOuterClass.Error.Type getType();

    /**
     * <code>optional string detail = 2;</code>
     *
     * <pre>
     * Detail is a human-readable error message.
     * </pre>
     */
    boolean hasDetail();
    /**
     * <code>optional string detail = 2;</code>
     *
     * <pre>
     * Detail is a human-readable error message.
     * </pre>
     */
    java.lang.String getDetail();
    /**
     * <code>optional string detail = 2;</code>
     *
     * <pre>
     * Detail is a human-readable error message.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDetailBytes();

    /**
     * <code>optional string field = 3;</code>
     *
     * <pre>
     * Field is a json path to the applicable field.
     * </pre>
     */
    boolean hasField();
    /**
     * <code>optional string field = 3;</code>
     *
     * <pre>
     * Field is a json path to the applicable field.
     * </pre>
     */
    java.lang.String getField();
    /**
     * <code>optional string field = 3;</code>
     *
     * <pre>
     * Field is a json path to the applicable field.
     * </pre>
     */
    com.google.protobuf.ByteString
        getFieldBytes();
  }
  /**
   * Protobuf type {@code squareup.connect.v3.resources.Error}
   *
   * <pre>
   * Errors are always a repeated field. This allows clients to easily group
   * errors by code or by field as they please. The contents of the human-readable
   * detail property may be subject to change.
   * </pre>
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:squareup.connect.v3.resources.Error)
      ErrorOrBuilder {
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Error() {
      type_ = 0;
      detail_ = "";
      field_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              squareup.connect.v3.resources.ErrorOuterClass.Error.Type value = squareup.connect.v3.resources.ErrorOuterClass.Error.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              detail_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              field_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return squareup.connect.v3.resources.ErrorOuterClass.internal_static_squareup_connect_v3_resources_Error_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return squareup.connect.v3.resources.ErrorOuterClass.internal_static_squareup_connect_v3_resources_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              squareup.connect.v3.resources.ErrorOuterClass.Error.class, squareup.connect.v3.resources.ErrorOuterClass.Error.Builder.class);
    }

    /**
     * Protobuf enum {@code squareup.connect.v3.resources.Error.Type}
     *
     * <pre>
     * Error types are (http status code * 100 + increment), except for
     * internal_server_error, which is the enum default.
     * </pre>
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INTERNAL_SERVER_ERROR = 0;</code>
       *
       * <pre>
       * 500 Internal Server Error
       * </pre>
       */
      INTERNAL_SERVER_ERROR(0, 0),
      /**
       * <code>UNAUTHORIZED = 40100;</code>
       *
       * <pre>
       * 401 Unauthorized
       * </pre>
       */
      UNAUTHORIZED(1, 40100),
      /**
       * <code>ACCESS_TOKEN_EXPIRED = 40101;</code>
       */
      ACCESS_TOKEN_EXPIRED(2, 40101),
      /**
       * <code>ACCESS_TOKEN_REVOKED = 40102;</code>
       */
      ACCESS_TOKEN_REVOKED(3, 40102),
      /**
       * <code>FORBIDDEN = 40300;</code>
       *
       * <pre>
       * 403 Forbidden
       * </pre>
       */
      FORBIDDEN(4, 40300),
      /**
       * <code>INSUFFICIENT_SCOPES = 40301;</code>
       */
      INSUFFICIENT_SCOPES(5, 40301),
      /**
       * <code>APPLICATION_DISABLED = 40302;</code>
       */
      APPLICATION_DISABLED(6, 40302),
      /**
       * <code>V1_APPLICATION = 40303;</code>
       */
      V1_APPLICATION(7, 40303),
      /**
       * <code>V1_ACCESS_TOKEN = 40304;</code>
       */
      V1_ACCESS_TOKEN(8, 40304),
      /**
       * <code>CARD_PROCESSING_NOT_ENABLED = 40305;</code>
       */
      CARD_PROCESSING_NOT_ENABLED(9, 40305),
      /**
       * <code>BAD_REQUEST = 40000;</code>
       *
       * <pre>
       * 400 Bad Request
       * </pre>
       */
      BAD_REQUEST(10, 40000),
      /**
       * <code>MISSING_REQUIRED_PARAMETER = 40001;</code>
       */
      MISSING_REQUIRED_PARAMETER(11, 40001),
      /**
       * <code>INCORRECT_TYPE = 40002;</code>
       *
       * <pre>
       * incorrect type for a field. prefer one of the EXPECTED_* errors.
       * </pre>
       */
      INCORRECT_TYPE(12, 40002),
      /**
       * <code>INVALID_TIME = 40003;</code>
       *
       * <pre>
       * time format was incorrect
       * </pre>
       */
      INVALID_TIME(13, 40003),
      /**
       * <code>INVALID_TIME_RANGE = 40004;</code>
       *
       * <pre>
       * time range is invalid
       * </pre>
       */
      INVALID_TIME_RANGE(14, 40004),
      /**
       * <code>INVALID_VALUE = 40005;</code>
       *
       * <pre>
       * field value is invalid. prefer a more specific error.
       * </pre>
       */
      INVALID_VALUE(15, 40005),
      /**
       * <code>INVALID_CURSOR = 40006;</code>
       */
      INVALID_CURSOR(16, 40006),
      /**
       * <code>UNKNOWN_QUERY_PARAMETER = 40007;</code>
       */
      UNKNOWN_QUERY_PARAMETER(17, 40007),
      /**
       * <code>CONFLICTING_PARAMETERS = 40008;</code>
       */
      CONFLICTING_PARAMETERS(18, 40008),
      /**
       * <code>EXPECTED_JSON_BODY = 40009;</code>
       *
       * <pre>
       * request body is not a JSON object
       * </pre>
       */
      EXPECTED_JSON_BODY(19, 40009),
      /**
       * <code>INVALID_SORT_ORDER = 40010;</code>
       *
       * <pre>
       * sort order must be ASC or DESC
       * </pre>
       */
      INVALID_SORT_ORDER(20, 40010),
      /**
       * <code>VALUE_TOO_LONG = 40011;</code>
       *
       * <pre>
       * string value exceeds maximum length
       * </pre>
       */
      VALUE_TOO_LONG(21, 40011),
      /**
       * <code>VALUE_TOO_LOW = 40012;</code>
       *
       * <pre>
       * value is below a require minimum
       * </pre>
       */
      VALUE_TOO_LOW(22, 40012),
      /**
       * <code>EXPECTED_BOOLEAN = 40013;</code>
       */
      EXPECTED_BOOLEAN(23, 40013),
      /**
       * <code>EXPECTED_INTEGER = 40014;</code>
       */
      EXPECTED_INTEGER(24, 40014),
      /**
       * <code>EXPECTED_FLOAT = 40015;</code>
       */
      EXPECTED_FLOAT(25, 40015),
      /**
       * <code>EXPECTED_STRING = 40016;</code>
       */
      EXPECTED_STRING(26, 40016),
      /**
       * <code>EXPECTED_OBJECT = 40017;</code>
       */
      EXPECTED_OBJECT(27, 40017),
      /**
       * <code>EXPECTED_ARRAY = 40018;</code>
       */
      EXPECTED_ARRAY(28, 40018),
      /**
       * <code>INVALID_ARRAY_VALUE = 40019;</code>
       *
       * <pre>
       * an object in an array does not match the array type
       * </pre>
       */
      INVALID_ARRAY_VALUE(29, 40019),
      /**
       * <code>INVALID_ENUM_VALUE = 40020;</code>
       *
       * <pre>
       * invalid enum value for an enum field
       * </pre>
       */
      INVALID_ENUM_VALUE(30, 40020),
      /**
       * <code>INVALID_CONTENT_TYPE = 40021;</code>
       *
       * <pre>
       * invalid content type header
       * </pre>
       */
      INVALID_CONTENT_TYPE(31, 40021),
      /**
       * <code>INVALID_FORM_VALUE = 40022;</code>
       *
       * <pre>
       * legacy error type for form parsing errors. only for v1 compatibility.
       * </pre>
       */
      INVALID_FORM_VALUE(32, 40022),
      /**
       * <code>CARD_DECLINED = 40023;</code>
       *
       * <pre>
       * these are card/payment related errors (seen in tokenization, charging, linking)
       * </pre>
       */
      CARD_DECLINED(33, 40023),
      /**
       * <code>CARD_EXPIRED = 40024;</code>
       */
      CARD_EXPIRED(34, 40024),
      /**
       * <code>VERIFY_CVV_FAILURE = 40025;</code>
       */
      VERIFY_CVV_FAILURE(35, 40025),
      /**
       * <code>VERIFY_AVS_FAILURE = 40026;</code>
       */
      VERIFY_AVS_FAILURE(36, 40026),
      /**
       * <code>INVALID_EXPIRATION = 40027;</code>
       */
      INVALID_EXPIRATION(37, 40027),
      /**
       * <code>INVALID_EXPIRATION_YEAR = 40028;</code>
       */
      INVALID_EXPIRATION_YEAR(38, 40028),
      /**
       * <code>INVALID_EXPIRATION_DATE = 40039;</code>
       */
      INVALID_EXPIRATION_DATE(39, 40039),
      /**
       * <code>INVALID_CARD = 40040;</code>
       */
      INVALID_CARD(40, 40040),
      /**
       * <code>DELAYED_TRANSACTION_EXPIRED = 40041;</code>
       *
       * <pre>
       * too long since auth
       * </pre>
       */
      DELAYED_TRANSACTION_EXPIRED(41, 40041),
      /**
       * <code>DELAYED_TRANSACTION_CANCELED = 40042;</code>
       *
       * <pre>
       * already cancelled
       * </pre>
       */
      DELAYED_TRANSACTION_CANCELED(42, 40042),
      /**
       * <code>DELAYED_TRANSACTION_CAPTURED = 40043;</code>
       *
       * <pre>
       * already captured
       * </pre>
       */
      DELAYED_TRANSACTION_CAPTURED(43, 40043),
      /**
       * <code>DELAYED_TRANSACTION_FAILED = 40044;</code>
       *
       * <pre>
       * already failed
       * </pre>
       */
      DELAYED_TRANSACTION_FAILED(44, 40044),
      /**
       * <code>CARD_TOKEN_EXPIRED = 40045;</code>
       */
      CARD_TOKEN_EXPIRED(45, 40045),
      /**
       * <code>CARD_TOKEN_USED = 40046;</code>
       */
      CARD_TOKEN_USED(46, 40046),
      /**
       * <code>AMOUNT_TOO_HIGH = 40047;</code>
       */
      AMOUNT_TOO_HIGH(47, 40047),
      /**
       * <code>NOT_FOUND = 40400;</code>
       *
       * <pre>
       * 404 Not Found
       * </pre>
       */
      NOT_FOUND(48, 40400),
      /**
       * <code>REQUEST_TIMEOUT = 40800;</code>
       *
       * <pre>
       * 408 Request Timeout
       * </pre>
       */
      REQUEST_TIMEOUT(49, 40800),
      /**
       * <code>REQUEST_ENTITY_TOO_LARGE = 41300;</code>
       *
       * <pre>
       * 413 Request Entity Too Large
       * </pre>
       */
      REQUEST_ENTITY_TOO_LARGE(50, 41300),
      /**
       * <code>UNSUPPORTED_MEDIA_TYPE = 41500;</code>
       *
       * <pre>
       * 415 Unsupported Media Type
       * </pre>
       */
      UNSUPPORTED_MEDIA_TYPE(51, 41500),
      /**
       * <code>RATE_LIMITED = 42900;</code>
       *
       * <pre>
       * 429 Rate Limited
       * </pre>
       */
      RATE_LIMITED(52, 42900),
      /**
       * <code>NOT_IMPLEMENTED = 50100;</code>
       *
       * <pre>
       * 501 Not Implemented
       * </pre>
       */
      NOT_IMPLEMENTED(53, 50100),
      /**
       * <code>SERVICE_UNAVAILABLE = 50300;</code>
       *
       * <pre>
       * 503 Service Unavailable
       * </pre>
       */
      SERVICE_UNAVAILABLE(54, 50300),
      ;

      /**
       * <code>INTERNAL_SERVER_ERROR = 0;</code>
       *
       * <pre>
       * 500 Internal Server Error
       * </pre>
       */
      public static final int INTERNAL_SERVER_ERROR_VALUE = 0;
      /**
       * <code>UNAUTHORIZED = 40100;</code>
       *
       * <pre>
       * 401 Unauthorized
       * </pre>
       */
      public static final int UNAUTHORIZED_VALUE = 40100;
      /**
       * <code>ACCESS_TOKEN_EXPIRED = 40101;</code>
       */
      public static final int ACCESS_TOKEN_EXPIRED_VALUE = 40101;
      /**
       * <code>ACCESS_TOKEN_REVOKED = 40102;</code>
       */
      public static final int ACCESS_TOKEN_REVOKED_VALUE = 40102;
      /**
       * <code>FORBIDDEN = 40300;</code>
       *
       * <pre>
       * 403 Forbidden
       * </pre>
       */
      public static final int FORBIDDEN_VALUE = 40300;
      /**
       * <code>INSUFFICIENT_SCOPES = 40301;</code>
       */
      public static final int INSUFFICIENT_SCOPES_VALUE = 40301;
      /**
       * <code>APPLICATION_DISABLED = 40302;</code>
       */
      public static final int APPLICATION_DISABLED_VALUE = 40302;
      /**
       * <code>V1_APPLICATION = 40303;</code>
       */
      public static final int V1_APPLICATION_VALUE = 40303;
      /**
       * <code>V1_ACCESS_TOKEN = 40304;</code>
       */
      public static final int V1_ACCESS_TOKEN_VALUE = 40304;
      /**
       * <code>CARD_PROCESSING_NOT_ENABLED = 40305;</code>
       */
      public static final int CARD_PROCESSING_NOT_ENABLED_VALUE = 40305;
      /**
       * <code>BAD_REQUEST = 40000;</code>
       *
       * <pre>
       * 400 Bad Request
       * </pre>
       */
      public static final int BAD_REQUEST_VALUE = 40000;
      /**
       * <code>MISSING_REQUIRED_PARAMETER = 40001;</code>
       */
      public static final int MISSING_REQUIRED_PARAMETER_VALUE = 40001;
      /**
       * <code>INCORRECT_TYPE = 40002;</code>
       *
       * <pre>
       * incorrect type for a field. prefer one of the EXPECTED_* errors.
       * </pre>
       */
      public static final int INCORRECT_TYPE_VALUE = 40002;
      /**
       * <code>INVALID_TIME = 40003;</code>
       *
       * <pre>
       * time format was incorrect
       * </pre>
       */
      public static final int INVALID_TIME_VALUE = 40003;
      /**
       * <code>INVALID_TIME_RANGE = 40004;</code>
       *
       * <pre>
       * time range is invalid
       * </pre>
       */
      public static final int INVALID_TIME_RANGE_VALUE = 40004;
      /**
       * <code>INVALID_VALUE = 40005;</code>
       *
       * <pre>
       * field value is invalid. prefer a more specific error.
       * </pre>
       */
      public static final int INVALID_VALUE_VALUE = 40005;
      /**
       * <code>INVALID_CURSOR = 40006;</code>
       */
      public static final int INVALID_CURSOR_VALUE = 40006;
      /**
       * <code>UNKNOWN_QUERY_PARAMETER = 40007;</code>
       */
      public static final int UNKNOWN_QUERY_PARAMETER_VALUE = 40007;
      /**
       * <code>CONFLICTING_PARAMETERS = 40008;</code>
       */
      public static final int CONFLICTING_PARAMETERS_VALUE = 40008;
      /**
       * <code>EXPECTED_JSON_BODY = 40009;</code>
       *
       * <pre>
       * request body is not a JSON object
       * </pre>
       */
      public static final int EXPECTED_JSON_BODY_VALUE = 40009;
      /**
       * <code>INVALID_SORT_ORDER = 40010;</code>
       *
       * <pre>
       * sort order must be ASC or DESC
       * </pre>
       */
      public static final int INVALID_SORT_ORDER_VALUE = 40010;
      /**
       * <code>VALUE_TOO_LONG = 40011;</code>
       *
       * <pre>
       * string value exceeds maximum length
       * </pre>
       */
      public static final int VALUE_TOO_LONG_VALUE = 40011;
      /**
       * <code>VALUE_TOO_LOW = 40012;</code>
       *
       * <pre>
       * value is below a require minimum
       * </pre>
       */
      public static final int VALUE_TOO_LOW_VALUE = 40012;
      /**
       * <code>EXPECTED_BOOLEAN = 40013;</code>
       */
      public static final int EXPECTED_BOOLEAN_VALUE = 40013;
      /**
       * <code>EXPECTED_INTEGER = 40014;</code>
       */
      public static final int EXPECTED_INTEGER_VALUE = 40014;
      /**
       * <code>EXPECTED_FLOAT = 40015;</code>
       */
      public static final int EXPECTED_FLOAT_VALUE = 40015;
      /**
       * <code>EXPECTED_STRING = 40016;</code>
       */
      public static final int EXPECTED_STRING_VALUE = 40016;
      /**
       * <code>EXPECTED_OBJECT = 40017;</code>
       */
      public static final int EXPECTED_OBJECT_VALUE = 40017;
      /**
       * <code>EXPECTED_ARRAY = 40018;</code>
       */
      public static final int EXPECTED_ARRAY_VALUE = 40018;
      /**
       * <code>INVALID_ARRAY_VALUE = 40019;</code>
       *
       * <pre>
       * an object in an array does not match the array type
       * </pre>
       */
      public static final int INVALID_ARRAY_VALUE_VALUE = 40019;
      /**
       * <code>INVALID_ENUM_VALUE = 40020;</code>
       *
       * <pre>
       * invalid enum value for an enum field
       * </pre>
       */
      public static final int INVALID_ENUM_VALUE_VALUE = 40020;
      /**
       * <code>INVALID_CONTENT_TYPE = 40021;</code>
       *
       * <pre>
       * invalid content type header
       * </pre>
       */
      public static final int INVALID_CONTENT_TYPE_VALUE = 40021;
      /**
       * <code>INVALID_FORM_VALUE = 40022;</code>
       *
       * <pre>
       * legacy error type for form parsing errors. only for v1 compatibility.
       * </pre>
       */
      public static final int INVALID_FORM_VALUE_VALUE = 40022;
      /**
       * <code>CARD_DECLINED = 40023;</code>
       *
       * <pre>
       * these are card/payment related errors (seen in tokenization, charging, linking)
       * </pre>
       */
      public static final int CARD_DECLINED_VALUE = 40023;
      /**
       * <code>CARD_EXPIRED = 40024;</code>
       */
      public static final int CARD_EXPIRED_VALUE = 40024;
      /**
       * <code>VERIFY_CVV_FAILURE = 40025;</code>
       */
      public static final int VERIFY_CVV_FAILURE_VALUE = 40025;
      /**
       * <code>VERIFY_AVS_FAILURE = 40026;</code>
       */
      public static final int VERIFY_AVS_FAILURE_VALUE = 40026;
      /**
       * <code>INVALID_EXPIRATION = 40027;</code>
       */
      public static final int INVALID_EXPIRATION_VALUE = 40027;
      /**
       * <code>INVALID_EXPIRATION_YEAR = 40028;</code>
       */
      public static final int INVALID_EXPIRATION_YEAR_VALUE = 40028;
      /**
       * <code>INVALID_EXPIRATION_DATE = 40039;</code>
       */
      public static final int INVALID_EXPIRATION_DATE_VALUE = 40039;
      /**
       * <code>INVALID_CARD = 40040;</code>
       */
      public static final int INVALID_CARD_VALUE = 40040;
      /**
       * <code>DELAYED_TRANSACTION_EXPIRED = 40041;</code>
       *
       * <pre>
       * too long since auth
       * </pre>
       */
      public static final int DELAYED_TRANSACTION_EXPIRED_VALUE = 40041;
      /**
       * <code>DELAYED_TRANSACTION_CANCELED = 40042;</code>
       *
       * <pre>
       * already cancelled
       * </pre>
       */
      public static final int DELAYED_TRANSACTION_CANCELED_VALUE = 40042;
      /**
       * <code>DELAYED_TRANSACTION_CAPTURED = 40043;</code>
       *
       * <pre>
       * already captured
       * </pre>
       */
      public static final int DELAYED_TRANSACTION_CAPTURED_VALUE = 40043;
      /**
       * <code>DELAYED_TRANSACTION_FAILED = 40044;</code>
       *
       * <pre>
       * already failed
       * </pre>
       */
      public static final int DELAYED_TRANSACTION_FAILED_VALUE = 40044;
      /**
       * <code>CARD_TOKEN_EXPIRED = 40045;</code>
       */
      public static final int CARD_TOKEN_EXPIRED_VALUE = 40045;
      /**
       * <code>CARD_TOKEN_USED = 40046;</code>
       */
      public static final int CARD_TOKEN_USED_VALUE = 40046;
      /**
       * <code>AMOUNT_TOO_HIGH = 40047;</code>
       */
      public static final int AMOUNT_TOO_HIGH_VALUE = 40047;
      /**
       * <code>NOT_FOUND = 40400;</code>
       *
       * <pre>
       * 404 Not Found
       * </pre>
       */
      public static final int NOT_FOUND_VALUE = 40400;
      /**
       * <code>REQUEST_TIMEOUT = 40800;</code>
       *
       * <pre>
       * 408 Request Timeout
       * </pre>
       */
      public static final int REQUEST_TIMEOUT_VALUE = 40800;
      /**
       * <code>REQUEST_ENTITY_TOO_LARGE = 41300;</code>
       *
       * <pre>
       * 413 Request Entity Too Large
       * </pre>
       */
      public static final int REQUEST_ENTITY_TOO_LARGE_VALUE = 41300;
      /**
       * <code>UNSUPPORTED_MEDIA_TYPE = 41500;</code>
       *
       * <pre>
       * 415 Unsupported Media Type
       * </pre>
       */
      public static final int UNSUPPORTED_MEDIA_TYPE_VALUE = 41500;
      /**
       * <code>RATE_LIMITED = 42900;</code>
       *
       * <pre>
       * 429 Rate Limited
       * </pre>
       */
      public static final int RATE_LIMITED_VALUE = 42900;
      /**
       * <code>NOT_IMPLEMENTED = 50100;</code>
       *
       * <pre>
       * 501 Not Implemented
       * </pre>
       */
      public static final int NOT_IMPLEMENTED_VALUE = 50100;
      /**
       * <code>SERVICE_UNAVAILABLE = 50300;</code>
       *
       * <pre>
       * 503 Service Unavailable
       * </pre>
       */
      public static final int SERVICE_UNAVAILABLE_VALUE = 50300;


      public final int getNumber() {
        return value;
      }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return INTERNAL_SERVER_ERROR;
          case 40100: return UNAUTHORIZED;
          case 40101: return ACCESS_TOKEN_EXPIRED;
          case 40102: return ACCESS_TOKEN_REVOKED;
          case 40300: return FORBIDDEN;
          case 40301: return INSUFFICIENT_SCOPES;
          case 40302: return APPLICATION_DISABLED;
          case 40303: return V1_APPLICATION;
          case 40304: return V1_ACCESS_TOKEN;
          case 40305: return CARD_PROCESSING_NOT_ENABLED;
          case 40000: return BAD_REQUEST;
          case 40001: return MISSING_REQUIRED_PARAMETER;
          case 40002: return INCORRECT_TYPE;
          case 40003: return INVALID_TIME;
          case 40004: return INVALID_TIME_RANGE;
          case 40005: return INVALID_VALUE;
          case 40006: return INVALID_CURSOR;
          case 40007: return UNKNOWN_QUERY_PARAMETER;
          case 40008: return CONFLICTING_PARAMETERS;
          case 40009: return EXPECTED_JSON_BODY;
          case 40010: return INVALID_SORT_ORDER;
          case 40011: return VALUE_TOO_LONG;
          case 40012: return VALUE_TOO_LOW;
          case 40013: return EXPECTED_BOOLEAN;
          case 40014: return EXPECTED_INTEGER;
          case 40015: return EXPECTED_FLOAT;
          case 40016: return EXPECTED_STRING;
          case 40017: return EXPECTED_OBJECT;
          case 40018: return EXPECTED_ARRAY;
          case 40019: return INVALID_ARRAY_VALUE;
          case 40020: return INVALID_ENUM_VALUE;
          case 40021: return INVALID_CONTENT_TYPE;
          case 40022: return INVALID_FORM_VALUE;
          case 40023: return CARD_DECLINED;
          case 40024: return CARD_EXPIRED;
          case 40025: return VERIFY_CVV_FAILURE;
          case 40026: return VERIFY_AVS_FAILURE;
          case 40027: return INVALID_EXPIRATION;
          case 40028: return INVALID_EXPIRATION_YEAR;
          case 40039: return INVALID_EXPIRATION_DATE;
          case 40040: return INVALID_CARD;
          case 40041: return DELAYED_TRANSACTION_EXPIRED;
          case 40042: return DELAYED_TRANSACTION_CANCELED;
          case 40043: return DELAYED_TRANSACTION_CAPTURED;
          case 40044: return DELAYED_TRANSACTION_FAILED;
          case 40045: return CARD_TOKEN_EXPIRED;
          case 40046: return CARD_TOKEN_USED;
          case 40047: return AMOUNT_TOO_HIGH;
          case 40400: return NOT_FOUND;
          case 40800: return REQUEST_TIMEOUT;
          case 41300: return REQUEST_ENTITY_TOO_LARGE;
          case 41500: return UNSUPPORTED_MEDIA_TYPE;
          case 42900: return RATE_LIMITED;
          case 50100: return NOT_IMPLEMENTED;
          case 50300: return SERVICE_UNAVAILABLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return squareup.connect.v3.resources.ErrorOuterClass.Error.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:squareup.connect.v3.resources.Error.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
     *
     * <pre>
     * Type is a machine-readable error code.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
     *
     * <pre>
     * Type is a machine-readable error code.
     * </pre>
     */
    public squareup.connect.v3.resources.ErrorOuterClass.Error.Type getType() {
      squareup.connect.v3.resources.ErrorOuterClass.Error.Type result = squareup.connect.v3.resources.ErrorOuterClass.Error.Type.valueOf(type_);
      return result == null ? squareup.connect.v3.resources.ErrorOuterClass.Error.Type.INTERNAL_SERVER_ERROR : result;
    }

    public static final int DETAIL_FIELD_NUMBER = 2;
    private volatile java.lang.Object detail_;
    /**
     * <code>optional string detail = 2;</code>
     *
     * <pre>
     * Detail is a human-readable error message.
     * </pre>
     */
    public boolean hasDetail() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string detail = 2;</code>
     *
     * <pre>
     * Detail is a human-readable error message.
     * </pre>
     */
    public java.lang.String getDetail() {
      java.lang.Object ref = detail_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          detail_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string detail = 2;</code>
     *
     * <pre>
     * Detail is a human-readable error message.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDetailBytes() {
      java.lang.Object ref = detail_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        detail_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELD_FIELD_NUMBER = 3;
    private volatile java.lang.Object field_;
    /**
     * <code>optional string field = 3;</code>
     *
     * <pre>
     * Field is a json path to the applicable field.
     * </pre>
     */
    public boolean hasField() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string field = 3;</code>
     *
     * <pre>
     * Field is a json path to the applicable field.
     * </pre>
     */
    public java.lang.String getField() {
      java.lang.Object ref = field_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          field_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string field = 3;</code>
     *
     * <pre>
     * Field is a json path to the applicable field.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFieldBytes() {
      java.lang.Object ref = field_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        field_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDetailBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFieldBytes());
      }
      unknownFields.writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDetailBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFieldBytes());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      try {
        return PARSER.parseFrom(input);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        if (e.getCause() instanceof java.io.IOException) {
          throw (java.io.IOException) e.getCause();
        }
        throw e;
      }
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      try {
        return PARSER.parseFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        if (e.getCause() instanceof java.io.IOException) {
          throw (java.io.IOException) e.getCause();
        }
        throw e;
      }
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      try {
        return PARSER.parseDelimitedFrom(input);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        if (e.getCause() instanceof java.io.IOException) {
          throw (java.io.IOException) e.getCause();
        }
        throw e;
      }
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      try {  return PARSER.parseDelimitedFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        if (e.getCause() instanceof java.io.IOException) {
          throw (java.io.IOException) e.getCause();
        }
        throw e;
      }
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      try {
        return PARSER.parseFrom(input);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        if (e.getCause() instanceof java.io.IOException) {
          throw (java.io.IOException) e.getCause();
        }
        throw e;
      }
    }
    public static squareup.connect.v3.resources.ErrorOuterClass.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      try {
        return PARSER.parseFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        if (e.getCause() instanceof java.io.IOException) {
          throw (java.io.IOException) e.getCause();
        }
        throw e;
      }
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(squareup.connect.v3.resources.ErrorOuterClass.Error prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code squareup.connect.v3.resources.Error}
     *
     * <pre>
     * Errors are always a repeated field. This allows clients to easily group
     * errors by code or by field as they please. The contents of the human-readable
     * detail property may be subject to change.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:squareup.connect.v3.resources.Error)
        squareup.connect.v3.resources.ErrorOuterClass.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return squareup.connect.v3.resources.ErrorOuterClass.internal_static_squareup_connect_v3_resources_Error_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return squareup.connect.v3.resources.ErrorOuterClass.internal_static_squareup_connect_v3_resources_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                squareup.connect.v3.resources.ErrorOuterClass.Error.class, squareup.connect.v3.resources.ErrorOuterClass.Error.Builder.class);
      }

      // Construct using squareup.connect.v3.resources.ErrorOuterClass.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        detail_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        field_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return squareup.connect.v3.resources.ErrorOuterClass.internal_static_squareup_connect_v3_resources_Error_descriptor;
      }

      public squareup.connect.v3.resources.ErrorOuterClass.Error getDefaultInstanceForType() {
        return squareup.connect.v3.resources.ErrorOuterClass.Error.getDefaultInstance();
      }

      public squareup.connect.v3.resources.ErrorOuterClass.Error build() {
        squareup.connect.v3.resources.ErrorOuterClass.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public squareup.connect.v3.resources.ErrorOuterClass.Error buildPartial() {
        squareup.connect.v3.resources.ErrorOuterClass.Error result = new squareup.connect.v3.resources.ErrorOuterClass.Error(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.detail_ = detail_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.field_ = field_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof squareup.connect.v3.resources.ErrorOuterClass.Error) {
          return mergeFrom((squareup.connect.v3.resources.ErrorOuterClass.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(squareup.connect.v3.resources.ErrorOuterClass.Error other) {
        if (other == squareup.connect.v3.resources.ErrorOuterClass.Error.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDetail()) {
          bitField0_ |= 0x00000002;
          detail_ = other.detail_;
          onChanged();
        }
        if (other.hasField()) {
          bitField0_ |= 0x00000004;
          field_ = other.field_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        squareup.connect.v3.resources.ErrorOuterClass.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (squareup.connect.v3.resources.ErrorOuterClass.Error) e.getUnfinishedMessage();
          if (e.getCause() instanceof java.io.IOException) {
            throw (java.io.IOException) e.getCause();
          }
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
       *
       * <pre>
       * Type is a machine-readable error code.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
       *
       * <pre>
       * Type is a machine-readable error code.
       * </pre>
       */
      public squareup.connect.v3.resources.ErrorOuterClass.Error.Type getType() {
        squareup.connect.v3.resources.ErrorOuterClass.Error.Type result = squareup.connect.v3.resources.ErrorOuterClass.Error.Type.valueOf(type_);
        return result == null ? squareup.connect.v3.resources.ErrorOuterClass.Error.Type.INTERNAL_SERVER_ERROR : result;
      }
      /**
       * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
       *
       * <pre>
       * Type is a machine-readable error code.
       * </pre>
       */
      public Builder setType(squareup.connect.v3.resources.ErrorOuterClass.Error.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .squareup.connect.v3.resources.Error.Type type = 1;</code>
       *
       * <pre>
       * Type is a machine-readable error code.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object detail_ = "";
      /**
       * <code>optional string detail = 2;</code>
       *
       * <pre>
       * Detail is a human-readable error message.
       * </pre>
       */
      public boolean hasDetail() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string detail = 2;</code>
       *
       * <pre>
       * Detail is a human-readable error message.
       * </pre>
       */
      public java.lang.String getDetail() {
        java.lang.Object ref = detail_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            detail_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string detail = 2;</code>
       *
       * <pre>
       * Detail is a human-readable error message.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDetailBytes() {
        java.lang.Object ref = detail_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          detail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string detail = 2;</code>
       *
       * <pre>
       * Detail is a human-readable error message.
       * </pre>
       */
      public Builder setDetail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        detail_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string detail = 2;</code>
       *
       * <pre>
       * Detail is a human-readable error message.
       * </pre>
       */
      public Builder clearDetail() {
        bitField0_ = (bitField0_ & ~0x00000002);
        detail_ = getDefaultInstance().getDetail();
        onChanged();
        return this;
      }
      /**
       * <code>optional string detail = 2;</code>
       *
       * <pre>
       * Detail is a human-readable error message.
       * </pre>
       */
      public Builder setDetailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        detail_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object field_ = "";
      /**
       * <code>optional string field = 3;</code>
       *
       * <pre>
       * Field is a json path to the applicable field.
       * </pre>
       */
      public boolean hasField() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string field = 3;</code>
       *
       * <pre>
       * Field is a json path to the applicable field.
       * </pre>
       */
      public java.lang.String getField() {
        java.lang.Object ref = field_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            field_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string field = 3;</code>
       *
       * <pre>
       * Field is a json path to the applicable field.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFieldBytes() {
        java.lang.Object ref = field_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          field_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string field = 3;</code>
       *
       * <pre>
       * Field is a json path to the applicable field.
       * </pre>
       */
      public Builder setField(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        field_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string field = 3;</code>
       *
       * <pre>
       * Field is a json path to the applicable field.
       * </pre>
       */
      public Builder clearField() {
        bitField0_ = (bitField0_ & ~0x00000004);
        field_ = getDefaultInstance().getField();
        onChanged();
        return this;
      }
      /**
       * <code>optional string field = 3;</code>
       *
       * <pre>
       * Field is a json path to the applicable field.
       * </pre>
       */
      public Builder setFieldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        field_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:squareup.connect.v3.resources.Error)
    }

    // @@protoc_insertion_point(class_scope:squareup.connect.v3.resources.Error)
    private static final squareup.connect.v3.resources.ErrorOuterClass.Error DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new squareup.connect.v3.resources.ErrorOuterClass.Error();
    }

    public static squareup.connect.v3.resources.ErrorOuterClass.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Error> PARSER =
        new com.google.protobuf.AbstractParser<Error>() {
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Error(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    public squareup.connect.v3.resources.ErrorOuterClass.Error getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_squareup_connect_v3_resources_Error_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_squareup_connect_v3_resources_Error_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)squareup/connect/v3/resources/error.pr" +
      "oto\022\035squareup.connect.v3.resources\"\346\013\n\005E" +
      "rror\0227\n\004type\030\001 \001(\0162).squareup.connect.v3" +
      ".resources.Error.Type\022\016\n\006detail\030\002 \001(\t\022\r\n" +
      "\005field\030\003 \001(\t\"\204\013\n\004Type\022\031\n\025INTERNAL_SERVER" +
      "_ERROR\020\000\022\022\n\014UNAUTHORIZED\020\244\271\002\022\032\n\024ACCESS_T" +
      "OKEN_EXPIRED\020\245\271\002\022\032\n\024ACCESS_TOKEN_REVOKED" +
      "\020\246\271\002\022\017\n\tFORBIDDEN\020\354\272\002\022\031\n\023INSUFFICIENT_SC" +
      "OPES\020\355\272\002\022\032\n\024APPLICATION_DISABLED\020\356\272\002\022\024\n\016" +
      "V1_APPLICATION\020\357\272\002\022\025\n\017V1_ACCESS_TOKEN\020\360\272",
      "\002\022!\n\033CARD_PROCESSING_NOT_ENABLED\020\361\272\002\022\021\n\013" +
      "BAD_REQUEST\020\300\270\002\022 \n\032MISSING_REQUIRED_PARA" +
      "METER\020\301\270\002\022\024\n\016INCORRECT_TYPE\020\302\270\002\022\022\n\014INVAL" +
      "ID_TIME\020\303\270\002\022\030\n\022INVALID_TIME_RANGE\020\304\270\002\022\023\n" +
      "\rINVALID_VALUE\020\305\270\002\022\024\n\016INVALID_CURSOR\020\306\270\002" +
      "\022\035\n\027UNKNOWN_QUERY_PARAMETER\020\307\270\002\022\034\n\026CONFL" +
      "ICTING_PARAMETERS\020\310\270\002\022\030\n\022EXPECTED_JSON_B" +
      "ODY\020\311\270\002\022\030\n\022INVALID_SORT_ORDER\020\312\270\002\022\024\n\016VAL" +
      "UE_TOO_LONG\020\313\270\002\022\023\n\rVALUE_TOO_LOW\020\314\270\002\022\026\n\020" +
      "EXPECTED_BOOLEAN\020\315\270\002\022\026\n\020EXPECTED_INTEGER",
      "\020\316\270\002\022\024\n\016EXPECTED_FLOAT\020\317\270\002\022\025\n\017EXPECTED_S" +
      "TRING\020\320\270\002\022\025\n\017EXPECTED_OBJECT\020\321\270\002\022\024\n\016EXPE" +
      "CTED_ARRAY\020\322\270\002\022\031\n\023INVALID_ARRAY_VALUE\020\323\270" +
      "\002\022\030\n\022INVALID_ENUM_VALUE\020\324\270\002\022\032\n\024INVALID_C" +
      "ONTENT_TYPE\020\325\270\002\022\030\n\022INVALID_FORM_VALUE\020\326\270" +
      "\002\022\023\n\rCARD_DECLINED\020\327\270\002\022\022\n\014CARD_EXPIRED\020\330" +
      "\270\002\022\030\n\022VERIFY_CVV_FAILURE\020\331\270\002\022\030\n\022VERIFY_A" +
      "VS_FAILURE\020\332\270\002\022\030\n\022INVALID_EXPIRATION\020\333\270\002" +
      "\022\035\n\027INVALID_EXPIRATION_YEAR\020\334\270\002\022\035\n\027INVAL" +
      "ID_EXPIRATION_DATE\020\347\270\002\022\022\n\014INVALID_CARD\020\350",
      "\270\002\022!\n\033DELAYED_TRANSACTION_EXPIRED\020\351\270\002\022\"\n" +
      "\034DELAYED_TRANSACTION_CANCELED\020\352\270\002\022\"\n\034DEL" +
      "AYED_TRANSACTION_CAPTURED\020\353\270\002\022 \n\032DELAYED" +
      "_TRANSACTION_FAILED\020\354\270\002\022\030\n\022CARD_TOKEN_EX" +
      "PIRED\020\355\270\002\022\025\n\017CARD_TOKEN_USED\020\356\270\002\022\025\n\017AMOU" +
      "NT_TOO_HIGH\020\357\270\002\022\017\n\tNOT_FOUND\020\320\273\002\022\025\n\017REQU" +
      "EST_TIMEOUT\020\340\276\002\022\036\n\030REQUEST_ENTITY_TOO_LA" +
      "RGE\020\324\302\002\022\034\n\026UNSUPPORTED_MEDIA_TYPE\020\234\304\002\022\022\n" +
      "\014RATE_LIMITED\020\224\317\002\022\025\n\017NOT_IMPLEMENTED\020\264\207\003" +
      "\022\031\n\023SERVICE_UNAVAILABLE\020\374\210\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_squareup_connect_v3_resources_Error_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_squareup_connect_v3_resources_Error_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_squareup_connect_v3_resources_Error_descriptor,
        new java.lang.String[] { "Type", "Detail", "Field", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
