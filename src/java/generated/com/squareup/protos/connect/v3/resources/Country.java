// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: squareup/connect/v3/resources/country.proto

package com.squareup.protos.connect.v3.resources;

/**
 * Protobuf enum {@code squareup.connect.v3.resources.Country}
 *
 * <pre>
 **
 * ISO-3166-1 Country Codes
 * http://www.iso.org/iso/home/standards/country_codes.htm
 * Names are the alpha-2 code, ordinals are the numerics
 * </pre>
 */
public enum Country
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ZZ = 0;</code>
   *
   * <pre>
   * Unknown
   * </pre>
   */
  ZZ(0, 0),
  /**
   * <code>AD = 20;</code>
   */
  AD(1, 20),
  /**
   * <code>AE = 784;</code>
   */
  AE(2, 784),
  /**
   * <code>AF = 4;</code>
   */
  AF(3, 4),
  /**
   * <code>AG = 28;</code>
   */
  AG(4, 28),
  /**
   * <code>AI = 660;</code>
   */
  AI(5, 660),
  /**
   * <code>AL = 8;</code>
   */
  AL(6, 8),
  /**
   * <code>AM = 51;</code>
   */
  AM(7, 51),
  /**
   * <code>AO = 24;</code>
   */
  AO(8, 24),
  /**
   * <code>AQ = 10;</code>
   */
  AQ(9, 10),
  /**
   * <code>AR = 32;</code>
   */
  AR(10, 32),
  /**
   * <code>AS = 16;</code>
   */
  AS(11, 16),
  /**
   * <code>AT = 40;</code>
   */
  AT(12, 40),
  /**
   * <code>AU = 36;</code>
   */
  AU(13, 36),
  /**
   * <code>AW = 533;</code>
   */
  AW(14, 533),
  /**
   * <code>AX = 248;</code>
   */
  AX(15, 248),
  /**
   * <code>AZ = 31;</code>
   */
  AZ(16, 31),
  /**
   * <code>BA = 70;</code>
   */
  BA(17, 70),
  /**
   * <code>BB = 52;</code>
   */
  BB(18, 52),
  /**
   * <code>BD = 50;</code>
   */
  BD(19, 50),
  /**
   * <code>BE = 56;</code>
   */
  BE(20, 56),
  /**
   * <code>BF = 854;</code>
   */
  BF(21, 854),
  /**
   * <code>BG = 100;</code>
   */
  BG(22, 100),
  /**
   * <code>BH = 48;</code>
   */
  BH(23, 48),
  /**
   * <code>BI = 108;</code>
   */
  BI(24, 108),
  /**
   * <code>BJ = 204;</code>
   */
  BJ(25, 204),
  /**
   * <code>BL = 652;</code>
   */
  BL(26, 652),
  /**
   * <code>BM = 60;</code>
   */
  BM(27, 60),
  /**
   * <code>BN = 96;</code>
   */
  BN(28, 96),
  /**
   * <code>BO = 68;</code>
   */
  BO(29, 68),
  /**
   * <code>BQ = 535;</code>
   */
  BQ(30, 535),
  /**
   * <code>BR = 76;</code>
   */
  BR(31, 76),
  /**
   * <code>BS = 44;</code>
   */
  BS(32, 44),
  /**
   * <code>BT = 64;</code>
   */
  BT(33, 64),
  /**
   * <code>BV = 74;</code>
   */
  BV(34, 74),
  /**
   * <code>BW = 72;</code>
   */
  BW(35, 72),
  /**
   * <code>BY = 112;</code>
   */
  BY(36, 112),
  /**
   * <code>BZ = 84;</code>
   */
  BZ(37, 84),
  /**
   * <code>CA = 124;</code>
   */
  CA(38, 124),
  /**
   * <code>CC = 166;</code>
   */
  CC(39, 166),
  /**
   * <code>CD = 180;</code>
   */
  CD(40, 180),
  /**
   * <code>CF = 140;</code>
   */
  CF(41, 140),
  /**
   * <code>CG = 178;</code>
   */
  CG(42, 178),
  /**
   * <code>CH = 756;</code>
   */
  CH(43, 756),
  /**
   * <code>CI = 384;</code>
   */
  CI(44, 384),
  /**
   * <code>CK = 184;</code>
   */
  CK(45, 184),
  /**
   * <code>CL = 152;</code>
   */
  CL(46, 152),
  /**
   * <code>CM = 120;</code>
   */
  CM(47, 120),
  /**
   * <code>CN = 156;</code>
   */
  CN(48, 156),
  /**
   * <code>CO = 170;</code>
   */
  CO(49, 170),
  /**
   * <code>CR = 188;</code>
   */
  CR(50, 188),
  /**
   * <code>CU = 192;</code>
   */
  CU(51, 192),
  /**
   * <code>CV = 132;</code>
   */
  CV(52, 132),
  /**
   * <code>CW = 531;</code>
   */
  CW(53, 531),
  /**
   * <code>CX = 162;</code>
   */
  CX(54, 162),
  /**
   * <code>CY = 196;</code>
   */
  CY(55, 196),
  /**
   * <code>CZ = 203;</code>
   */
  CZ(56, 203),
  /**
   * <code>DE = 276;</code>
   */
  DE(57, 276),
  /**
   * <code>DJ = 262;</code>
   */
  DJ(58, 262),
  /**
   * <code>DK = 208;</code>
   */
  DK(59, 208),
  /**
   * <code>DM = 212;</code>
   */
  DM(60, 212),
  /**
   * <code>DO = 214;</code>
   */
  DO(61, 214),
  /**
   * <code>DZ = 12;</code>
   */
  DZ(62, 12),
  /**
   * <code>EC = 218;</code>
   */
  EC(63, 218),
  /**
   * <code>EE = 233;</code>
   */
  EE(64, 233),
  /**
   * <code>EG = 818;</code>
   */
  EG(65, 818),
  /**
   * <code>EH = 732;</code>
   */
  EH(66, 732),
  /**
   * <code>ER = 232;</code>
   */
  ER(67, 232),
  /**
   * <code>ES = 724;</code>
   */
  ES(68, 724),
  /**
   * <code>ET = 231;</code>
   */
  ET(69, 231),
  /**
   * <code>FI = 246;</code>
   */
  FI(70, 246),
  /**
   * <code>FJ = 242;</code>
   */
  FJ(71, 242),
  /**
   * <code>FK = 238;</code>
   */
  FK(72, 238),
  /**
   * <code>FM = 583;</code>
   */
  FM(73, 583),
  /**
   * <code>FO = 234;</code>
   */
  FO(74, 234),
  /**
   * <code>FR = 250;</code>
   */
  FR(75, 250),
  /**
   * <code>GA = 266;</code>
   */
  GA(76, 266),
  /**
   * <code>GB = 826;</code>
   */
  GB(77, 826),
  /**
   * <code>GD = 308;</code>
   */
  GD(78, 308),
  /**
   * <code>GE = 268;</code>
   */
  GE(79, 268),
  /**
   * <code>GF = 254;</code>
   */
  GF(80, 254),
  /**
   * <code>GG = 831;</code>
   */
  GG(81, 831),
  /**
   * <code>GH = 288;</code>
   */
  GH(82, 288),
  /**
   * <code>GI = 292;</code>
   */
  GI(83, 292),
  /**
   * <code>GL = 304;</code>
   */
  GL(84, 304),
  /**
   * <code>GM = 270;</code>
   */
  GM(85, 270),
  /**
   * <code>GN = 324;</code>
   */
  GN(86, 324),
  /**
   * <code>GP = 312;</code>
   */
  GP(87, 312),
  /**
   * <code>GQ = 226;</code>
   */
  GQ(88, 226),
  /**
   * <code>GR = 300;</code>
   */
  GR(89, 300),
  /**
   * <code>GS = 239;</code>
   */
  GS(90, 239),
  /**
   * <code>GT = 320;</code>
   */
  GT(91, 320),
  /**
   * <code>GU = 316;</code>
   */
  GU(92, 316),
  /**
   * <code>GW = 624;</code>
   */
  GW(93, 624),
  /**
   * <code>GY = 328;</code>
   */
  GY(94, 328),
  /**
   * <code>HK = 344;</code>
   */
  HK(95, 344),
  /**
   * <code>HM = 334;</code>
   */
  HM(96, 334),
  /**
   * <code>HN = 340;</code>
   */
  HN(97, 340),
  /**
   * <code>HR = 191;</code>
   */
  HR(98, 191),
  /**
   * <code>HT = 332;</code>
   */
  HT(99, 332),
  /**
   * <code>HU = 348;</code>
   */
  HU(100, 348),
  /**
   * <code>ID = 360;</code>
   */
  ID(101, 360),
  /**
   * <code>IE = 372;</code>
   */
  IE(102, 372),
  /**
   * <code>IL = 376;</code>
   */
  IL(103, 376),
  /**
   * <code>IM = 833;</code>
   */
  IM(104, 833),
  /**
   * <code>IN = 356;</code>
   */
  IN(105, 356),
  /**
   * <code>IO = 86;</code>
   */
  IO(106, 86),
  /**
   * <code>IQ = 368;</code>
   */
  IQ(107, 368),
  /**
   * <code>IR = 364;</code>
   */
  IR(108, 364),
  /**
   * <code>IS = 352;</code>
   */
  IS(109, 352),
  /**
   * <code>IT = 380;</code>
   */
  IT(110, 380),
  /**
   * <code>JE = 832;</code>
   */
  JE(111, 832),
  /**
   * <code>JM = 388;</code>
   */
  JM(112, 388),
  /**
   * <code>JO = 400;</code>
   */
  JO(113, 400),
  /**
   * <code>JP = 392;</code>
   */
  JP(114, 392),
  /**
   * <code>KE = 404;</code>
   */
  KE(115, 404),
  /**
   * <code>KG = 417;</code>
   */
  KG(116, 417),
  /**
   * <code>KH = 116;</code>
   */
  KH(117, 116),
  /**
   * <code>KI = 296;</code>
   */
  KI(118, 296),
  /**
   * <code>KM = 174;</code>
   */
  KM(119, 174),
  /**
   * <code>KN = 659;</code>
   */
  KN(120, 659),
  /**
   * <code>KP = 408;</code>
   */
  KP(121, 408),
  /**
   * <code>KR = 410;</code>
   */
  KR(122, 410),
  /**
   * <code>KW = 414;</code>
   */
  KW(123, 414),
  /**
   * <code>KY = 136;</code>
   */
  KY(124, 136),
  /**
   * <code>KZ = 398;</code>
   */
  KZ(125, 398),
  /**
   * <code>LA = 418;</code>
   */
  LA(126, 418),
  /**
   * <code>LB = 422;</code>
   */
  LB(127, 422),
  /**
   * <code>LC = 662;</code>
   */
  LC(128, 662),
  /**
   * <code>LI = 438;</code>
   */
  LI(129, 438),
  /**
   * <code>LK = 144;</code>
   */
  LK(130, 144),
  /**
   * <code>LR = 430;</code>
   */
  LR(131, 430),
  /**
   * <code>LS = 426;</code>
   */
  LS(132, 426),
  /**
   * <code>LT = 440;</code>
   */
  LT(133, 440),
  /**
   * <code>LU = 442;</code>
   */
  LU(134, 442),
  /**
   * <code>LV = 428;</code>
   */
  LV(135, 428),
  /**
   * <code>LY = 434;</code>
   */
  LY(136, 434),
  /**
   * <code>MA = 504;</code>
   */
  MA(137, 504),
  /**
   * <code>MC = 492;</code>
   */
  MC(138, 492),
  /**
   * <code>MD = 498;</code>
   */
  MD(139, 498),
  /**
   * <code>ME = 499;</code>
   */
  ME(140, 499),
  /**
   * <code>MF = 663;</code>
   */
  MF(141, 663),
  /**
   * <code>MG = 450;</code>
   */
  MG(142, 450),
  /**
   * <code>MH = 584;</code>
   */
  MH(143, 584),
  /**
   * <code>MK = 807;</code>
   */
  MK(144, 807),
  /**
   * <code>ML = 466;</code>
   */
  ML(145, 466),
  /**
   * <code>MM = 104;</code>
   */
  MM(146, 104),
  /**
   * <code>MN = 496;</code>
   */
  MN(147, 496),
  /**
   * <code>MO = 446;</code>
   */
  MO(148, 446),
  /**
   * <code>MP = 580;</code>
   */
  MP(149, 580),
  /**
   * <code>MQ = 474;</code>
   */
  MQ(150, 474),
  /**
   * <code>MR = 478;</code>
   */
  MR(151, 478),
  /**
   * <code>MS = 500;</code>
   */
  MS(152, 500),
  /**
   * <code>MT = 470;</code>
   */
  MT(153, 470),
  /**
   * <code>MU = 480;</code>
   */
  MU(154, 480),
  /**
   * <code>MV = 462;</code>
   */
  MV(155, 462),
  /**
   * <code>MW = 454;</code>
   */
  MW(156, 454),
  /**
   * <code>MX = 484;</code>
   */
  MX(157, 484),
  /**
   * <code>MY = 458;</code>
   */
  MY(158, 458),
  /**
   * <code>MZ = 508;</code>
   */
  MZ(159, 508),
  /**
   * <code>NA = 516;</code>
   */
  NA(160, 516),
  /**
   * <code>NC = 540;</code>
   */
  NC(161, 540),
  /**
   * <code>NE = 562;</code>
   */
  NE(162, 562),
  /**
   * <code>NF = 574;</code>
   */
  NF(163, 574),
  /**
   * <code>NG = 566;</code>
   */
  NG(164, 566),
  /**
   * <code>NI = 558;</code>
   */
  NI(165, 558),
  /**
   * <code>NL = 528;</code>
   */
  NL(166, 528),
  /**
   * <code>NO = 578;</code>
   */
  NO(167, 578),
  /**
   * <code>NP = 524;</code>
   */
  NP(168, 524),
  /**
   * <code>NR = 520;</code>
   */
  NR(169, 520),
  /**
   * <code>NU = 570;</code>
   */
  NU(170, 570),
  /**
   * <code>NZ = 554;</code>
   */
  NZ(171, 554),
  /**
   * <code>OM = 512;</code>
   */
  OM(172, 512),
  /**
   * <code>PA = 591;</code>
   */
  PA(173, 591),
  /**
   * <code>PE = 604;</code>
   */
  PE(174, 604),
  /**
   * <code>PF = 258;</code>
   */
  PF(175, 258),
  /**
   * <code>PG = 598;</code>
   */
  PG(176, 598),
  /**
   * <code>PH = 608;</code>
   */
  PH(177, 608),
  /**
   * <code>PK = 586;</code>
   */
  PK(178, 586),
  /**
   * <code>PL = 616;</code>
   */
  PL(179, 616),
  /**
   * <code>PM = 666;</code>
   */
  PM(180, 666),
  /**
   * <code>PN = 612;</code>
   */
  PN(181, 612),
  /**
   * <code>PR = 630;</code>
   */
  PR(182, 630),
  /**
   * <code>PS = 275;</code>
   */
  PS(183, 275),
  /**
   * <code>PT = 620;</code>
   */
  PT(184, 620),
  /**
   * <code>PW = 585;</code>
   */
  PW(185, 585),
  /**
   * <code>PY = 600;</code>
   */
  PY(186, 600),
  /**
   * <code>QA = 634;</code>
   */
  QA(187, 634),
  /**
   * <code>RE = 638;</code>
   */
  RE(188, 638),
  /**
   * <code>RO = 642;</code>
   */
  RO(189, 642),
  /**
   * <code>RS = 688;</code>
   */
  RS(190, 688),
  /**
   * <code>RU = 643;</code>
   */
  RU(191, 643),
  /**
   * <code>RW = 646;</code>
   */
  RW(192, 646),
  /**
   * <code>SA = 682;</code>
   */
  SA(193, 682),
  /**
   * <code>SB = 90;</code>
   */
  SB(194, 90),
  /**
   * <code>SC = 690;</code>
   */
  SC(195, 690),
  /**
   * <code>SD = 736;</code>
   */
  SD(196, 736),
  /**
   * <code>SE = 752;</code>
   */
  SE(197, 752),
  /**
   * <code>SG = 702;</code>
   */
  SG(198, 702),
  /**
   * <code>SH = 654;</code>
   */
  SH(199, 654),
  /**
   * <code>SI = 705;</code>
   */
  SI(200, 705),
  /**
   * <code>SJ = 744;</code>
   */
  SJ(201, 744),
  /**
   * <code>SK = 703;</code>
   */
  SK(202, 703),
  /**
   * <code>SL = 694;</code>
   */
  SL(203, 694),
  /**
   * <code>SM = 674;</code>
   */
  SM(204, 674),
  /**
   * <code>SN = 686;</code>
   */
  SN(205, 686),
  /**
   * <code>SO = 706;</code>
   */
  SO(206, 706),
  /**
   * <code>SR = 740;</code>
   */
  SR(207, 740),
  /**
   * <code>SS = 728;</code>
   */
  SS(208, 728),
  /**
   * <code>ST = 678;</code>
   */
  ST(209, 678),
  /**
   * <code>SV = 222;</code>
   */
  SV(210, 222),
  /**
   * <code>SX = 534;</code>
   */
  SX(211, 534),
  /**
   * <code>SY = 760;</code>
   */
  SY(212, 760),
  /**
   * <code>SZ = 748;</code>
   */
  SZ(213, 748),
  /**
   * <code>TC = 796;</code>
   */
  TC(214, 796),
  /**
   * <code>TD = 148;</code>
   */
  TD(215, 148),
  /**
   * <code>TF = 260;</code>
   */
  TF(216, 260),
  /**
   * <code>TG = 768;</code>
   */
  TG(217, 768),
  /**
   * <code>TH = 764;</code>
   */
  TH(218, 764),
  /**
   * <code>TJ = 762;</code>
   */
  TJ(219, 762),
  /**
   * <code>TK = 772;</code>
   */
  TK(220, 772),
  /**
   * <code>TL = 626;</code>
   */
  TL(221, 626),
  /**
   * <code>TM = 795;</code>
   */
  TM(222, 795),
  /**
   * <code>TN = 788;</code>
   */
  TN(223, 788),
  /**
   * <code>TO = 776;</code>
   */
  TO(224, 776),
  /**
   * <code>TR = 792;</code>
   */
  TR(225, 792),
  /**
   * <code>TT = 780;</code>
   */
  TT(226, 780),
  /**
   * <code>TV = 798;</code>
   */
  TV(227, 798),
  /**
   * <code>TW = 158;</code>
   */
  TW(228, 158),
  /**
   * <code>TZ = 834;</code>
   */
  TZ(229, 834),
  /**
   * <code>UA = 804;</code>
   */
  UA(230, 804),
  /**
   * <code>UG = 800;</code>
   */
  UG(231, 800),
  /**
   * <code>UM = 581;</code>
   */
  UM(232, 581),
  /**
   * <code>US = 840;</code>
   */
  US(233, 840),
  /**
   * <code>UY = 858;</code>
   */
  UY(234, 858),
  /**
   * <code>UZ = 860;</code>
   */
  UZ(235, 860),
  /**
   * <code>VA = 336;</code>
   */
  VA(236, 336),
  /**
   * <code>VC = 670;</code>
   */
  VC(237, 670),
  /**
   * <code>VE = 862;</code>
   */
  VE(238, 862),
  /**
   * <code>VG = 92;</code>
   */
  VG(239, 92),
  /**
   * <code>VI = 850;</code>
   */
  VI(240, 850),
  /**
   * <code>VN = 704;</code>
   */
  VN(241, 704),
  /**
   * <code>VU = 548;</code>
   */
  VU(242, 548),
  /**
   * <code>WF = 876;</code>
   */
  WF(243, 876),
  /**
   * <code>WS = 882;</code>
   */
  WS(244, 882),
  /**
   * <code>YE = 887;</code>
   */
  YE(245, 887),
  /**
   * <code>YT = 175;</code>
   */
  YT(246, 175),
  /**
   * <code>ZA = 710;</code>
   */
  ZA(247, 710),
  /**
   * <code>ZM = 894;</code>
   */
  ZM(248, 894),
  /**
   * <code>ZW = 716;</code>
   */
  ZW(249, 716),
  ;

  /**
   * <code>ZZ = 0;</code>
   *
   * <pre>
   * Unknown
   * </pre>
   */
  public static final int ZZ_VALUE = 0;
  /**
   * <code>AD = 20;</code>
   */
  public static final int AD_VALUE = 20;
  /**
   * <code>AE = 784;</code>
   */
  public static final int AE_VALUE = 784;
  /**
   * <code>AF = 4;</code>
   */
  public static final int AF_VALUE = 4;
  /**
   * <code>AG = 28;</code>
   */
  public static final int AG_VALUE = 28;
  /**
   * <code>AI = 660;</code>
   */
  public static final int AI_VALUE = 660;
  /**
   * <code>AL = 8;</code>
   */
  public static final int AL_VALUE = 8;
  /**
   * <code>AM = 51;</code>
   */
  public static final int AM_VALUE = 51;
  /**
   * <code>AO = 24;</code>
   */
  public static final int AO_VALUE = 24;
  /**
   * <code>AQ = 10;</code>
   */
  public static final int AQ_VALUE = 10;
  /**
   * <code>AR = 32;</code>
   */
  public static final int AR_VALUE = 32;
  /**
   * <code>AS = 16;</code>
   */
  public static final int AS_VALUE = 16;
  /**
   * <code>AT = 40;</code>
   */
  public static final int AT_VALUE = 40;
  /**
   * <code>AU = 36;</code>
   */
  public static final int AU_VALUE = 36;
  /**
   * <code>AW = 533;</code>
   */
  public static final int AW_VALUE = 533;
  /**
   * <code>AX = 248;</code>
   */
  public static final int AX_VALUE = 248;
  /**
   * <code>AZ = 31;</code>
   */
  public static final int AZ_VALUE = 31;
  /**
   * <code>BA = 70;</code>
   */
  public static final int BA_VALUE = 70;
  /**
   * <code>BB = 52;</code>
   */
  public static final int BB_VALUE = 52;
  /**
   * <code>BD = 50;</code>
   */
  public static final int BD_VALUE = 50;
  /**
   * <code>BE = 56;</code>
   */
  public static final int BE_VALUE = 56;
  /**
   * <code>BF = 854;</code>
   */
  public static final int BF_VALUE = 854;
  /**
   * <code>BG = 100;</code>
   */
  public static final int BG_VALUE = 100;
  /**
   * <code>BH = 48;</code>
   */
  public static final int BH_VALUE = 48;
  /**
   * <code>BI = 108;</code>
   */
  public static final int BI_VALUE = 108;
  /**
   * <code>BJ = 204;</code>
   */
  public static final int BJ_VALUE = 204;
  /**
   * <code>BL = 652;</code>
   */
  public static final int BL_VALUE = 652;
  /**
   * <code>BM = 60;</code>
   */
  public static final int BM_VALUE = 60;
  /**
   * <code>BN = 96;</code>
   */
  public static final int BN_VALUE = 96;
  /**
   * <code>BO = 68;</code>
   */
  public static final int BO_VALUE = 68;
  /**
   * <code>BQ = 535;</code>
   */
  public static final int BQ_VALUE = 535;
  /**
   * <code>BR = 76;</code>
   */
  public static final int BR_VALUE = 76;
  /**
   * <code>BS = 44;</code>
   */
  public static final int BS_VALUE = 44;
  /**
   * <code>BT = 64;</code>
   */
  public static final int BT_VALUE = 64;
  /**
   * <code>BV = 74;</code>
   */
  public static final int BV_VALUE = 74;
  /**
   * <code>BW = 72;</code>
   */
  public static final int BW_VALUE = 72;
  /**
   * <code>BY = 112;</code>
   */
  public static final int BY_VALUE = 112;
  /**
   * <code>BZ = 84;</code>
   */
  public static final int BZ_VALUE = 84;
  /**
   * <code>CA = 124;</code>
   */
  public static final int CA_VALUE = 124;
  /**
   * <code>CC = 166;</code>
   */
  public static final int CC_VALUE = 166;
  /**
   * <code>CD = 180;</code>
   */
  public static final int CD_VALUE = 180;
  /**
   * <code>CF = 140;</code>
   */
  public static final int CF_VALUE = 140;
  /**
   * <code>CG = 178;</code>
   */
  public static final int CG_VALUE = 178;
  /**
   * <code>CH = 756;</code>
   */
  public static final int CH_VALUE = 756;
  /**
   * <code>CI = 384;</code>
   */
  public static final int CI_VALUE = 384;
  /**
   * <code>CK = 184;</code>
   */
  public static final int CK_VALUE = 184;
  /**
   * <code>CL = 152;</code>
   */
  public static final int CL_VALUE = 152;
  /**
   * <code>CM = 120;</code>
   */
  public static final int CM_VALUE = 120;
  /**
   * <code>CN = 156;</code>
   */
  public static final int CN_VALUE = 156;
  /**
   * <code>CO = 170;</code>
   */
  public static final int CO_VALUE = 170;
  /**
   * <code>CR = 188;</code>
   */
  public static final int CR_VALUE = 188;
  /**
   * <code>CU = 192;</code>
   */
  public static final int CU_VALUE = 192;
  /**
   * <code>CV = 132;</code>
   */
  public static final int CV_VALUE = 132;
  /**
   * <code>CW = 531;</code>
   */
  public static final int CW_VALUE = 531;
  /**
   * <code>CX = 162;</code>
   */
  public static final int CX_VALUE = 162;
  /**
   * <code>CY = 196;</code>
   */
  public static final int CY_VALUE = 196;
  /**
   * <code>CZ = 203;</code>
   */
  public static final int CZ_VALUE = 203;
  /**
   * <code>DE = 276;</code>
   */
  public static final int DE_VALUE = 276;
  /**
   * <code>DJ = 262;</code>
   */
  public static final int DJ_VALUE = 262;
  /**
   * <code>DK = 208;</code>
   */
  public static final int DK_VALUE = 208;
  /**
   * <code>DM = 212;</code>
   */
  public static final int DM_VALUE = 212;
  /**
   * <code>DO = 214;</code>
   */
  public static final int DO_VALUE = 214;
  /**
   * <code>DZ = 12;</code>
   */
  public static final int DZ_VALUE = 12;
  /**
   * <code>EC = 218;</code>
   */
  public static final int EC_VALUE = 218;
  /**
   * <code>EE = 233;</code>
   */
  public static final int EE_VALUE = 233;
  /**
   * <code>EG = 818;</code>
   */
  public static final int EG_VALUE = 818;
  /**
   * <code>EH = 732;</code>
   */
  public static final int EH_VALUE = 732;
  /**
   * <code>ER = 232;</code>
   */
  public static final int ER_VALUE = 232;
  /**
   * <code>ES = 724;</code>
   */
  public static final int ES_VALUE = 724;
  /**
   * <code>ET = 231;</code>
   */
  public static final int ET_VALUE = 231;
  /**
   * <code>FI = 246;</code>
   */
  public static final int FI_VALUE = 246;
  /**
   * <code>FJ = 242;</code>
   */
  public static final int FJ_VALUE = 242;
  /**
   * <code>FK = 238;</code>
   */
  public static final int FK_VALUE = 238;
  /**
   * <code>FM = 583;</code>
   */
  public static final int FM_VALUE = 583;
  /**
   * <code>FO = 234;</code>
   */
  public static final int FO_VALUE = 234;
  /**
   * <code>FR = 250;</code>
   */
  public static final int FR_VALUE = 250;
  /**
   * <code>GA = 266;</code>
   */
  public static final int GA_VALUE = 266;
  /**
   * <code>GB = 826;</code>
   */
  public static final int GB_VALUE = 826;
  /**
   * <code>GD = 308;</code>
   */
  public static final int GD_VALUE = 308;
  /**
   * <code>GE = 268;</code>
   */
  public static final int GE_VALUE = 268;
  /**
   * <code>GF = 254;</code>
   */
  public static final int GF_VALUE = 254;
  /**
   * <code>GG = 831;</code>
   */
  public static final int GG_VALUE = 831;
  /**
   * <code>GH = 288;</code>
   */
  public static final int GH_VALUE = 288;
  /**
   * <code>GI = 292;</code>
   */
  public static final int GI_VALUE = 292;
  /**
   * <code>GL = 304;</code>
   */
  public static final int GL_VALUE = 304;
  /**
   * <code>GM = 270;</code>
   */
  public static final int GM_VALUE = 270;
  /**
   * <code>GN = 324;</code>
   */
  public static final int GN_VALUE = 324;
  /**
   * <code>GP = 312;</code>
   */
  public static final int GP_VALUE = 312;
  /**
   * <code>GQ = 226;</code>
   */
  public static final int GQ_VALUE = 226;
  /**
   * <code>GR = 300;</code>
   */
  public static final int GR_VALUE = 300;
  /**
   * <code>GS = 239;</code>
   */
  public static final int GS_VALUE = 239;
  /**
   * <code>GT = 320;</code>
   */
  public static final int GT_VALUE = 320;
  /**
   * <code>GU = 316;</code>
   */
  public static final int GU_VALUE = 316;
  /**
   * <code>GW = 624;</code>
   */
  public static final int GW_VALUE = 624;
  /**
   * <code>GY = 328;</code>
   */
  public static final int GY_VALUE = 328;
  /**
   * <code>HK = 344;</code>
   */
  public static final int HK_VALUE = 344;
  /**
   * <code>HM = 334;</code>
   */
  public static final int HM_VALUE = 334;
  /**
   * <code>HN = 340;</code>
   */
  public static final int HN_VALUE = 340;
  /**
   * <code>HR = 191;</code>
   */
  public static final int HR_VALUE = 191;
  /**
   * <code>HT = 332;</code>
   */
  public static final int HT_VALUE = 332;
  /**
   * <code>HU = 348;</code>
   */
  public static final int HU_VALUE = 348;
  /**
   * <code>ID = 360;</code>
   */
  public static final int ID_VALUE = 360;
  /**
   * <code>IE = 372;</code>
   */
  public static final int IE_VALUE = 372;
  /**
   * <code>IL = 376;</code>
   */
  public static final int IL_VALUE = 376;
  /**
   * <code>IM = 833;</code>
   */
  public static final int IM_VALUE = 833;
  /**
   * <code>IN = 356;</code>
   */
  public static final int IN_VALUE = 356;
  /**
   * <code>IO = 86;</code>
   */
  public static final int IO_VALUE = 86;
  /**
   * <code>IQ = 368;</code>
   */
  public static final int IQ_VALUE = 368;
  /**
   * <code>IR = 364;</code>
   */
  public static final int IR_VALUE = 364;
  /**
   * <code>IS = 352;</code>
   */
  public static final int IS_VALUE = 352;
  /**
   * <code>IT = 380;</code>
   */
  public static final int IT_VALUE = 380;
  /**
   * <code>JE = 832;</code>
   */
  public static final int JE_VALUE = 832;
  /**
   * <code>JM = 388;</code>
   */
  public static final int JM_VALUE = 388;
  /**
   * <code>JO = 400;</code>
   */
  public static final int JO_VALUE = 400;
  /**
   * <code>JP = 392;</code>
   */
  public static final int JP_VALUE = 392;
  /**
   * <code>KE = 404;</code>
   */
  public static final int KE_VALUE = 404;
  /**
   * <code>KG = 417;</code>
   */
  public static final int KG_VALUE = 417;
  /**
   * <code>KH = 116;</code>
   */
  public static final int KH_VALUE = 116;
  /**
   * <code>KI = 296;</code>
   */
  public static final int KI_VALUE = 296;
  /**
   * <code>KM = 174;</code>
   */
  public static final int KM_VALUE = 174;
  /**
   * <code>KN = 659;</code>
   */
  public static final int KN_VALUE = 659;
  /**
   * <code>KP = 408;</code>
   */
  public static final int KP_VALUE = 408;
  /**
   * <code>KR = 410;</code>
   */
  public static final int KR_VALUE = 410;
  /**
   * <code>KW = 414;</code>
   */
  public static final int KW_VALUE = 414;
  /**
   * <code>KY = 136;</code>
   */
  public static final int KY_VALUE = 136;
  /**
   * <code>KZ = 398;</code>
   */
  public static final int KZ_VALUE = 398;
  /**
   * <code>LA = 418;</code>
   */
  public static final int LA_VALUE = 418;
  /**
   * <code>LB = 422;</code>
   */
  public static final int LB_VALUE = 422;
  /**
   * <code>LC = 662;</code>
   */
  public static final int LC_VALUE = 662;
  /**
   * <code>LI = 438;</code>
   */
  public static final int LI_VALUE = 438;
  /**
   * <code>LK = 144;</code>
   */
  public static final int LK_VALUE = 144;
  /**
   * <code>LR = 430;</code>
   */
  public static final int LR_VALUE = 430;
  /**
   * <code>LS = 426;</code>
   */
  public static final int LS_VALUE = 426;
  /**
   * <code>LT = 440;</code>
   */
  public static final int LT_VALUE = 440;
  /**
   * <code>LU = 442;</code>
   */
  public static final int LU_VALUE = 442;
  /**
   * <code>LV = 428;</code>
   */
  public static final int LV_VALUE = 428;
  /**
   * <code>LY = 434;</code>
   */
  public static final int LY_VALUE = 434;
  /**
   * <code>MA = 504;</code>
   */
  public static final int MA_VALUE = 504;
  /**
   * <code>MC = 492;</code>
   */
  public static final int MC_VALUE = 492;
  /**
   * <code>MD = 498;</code>
   */
  public static final int MD_VALUE = 498;
  /**
   * <code>ME = 499;</code>
   */
  public static final int ME_VALUE = 499;
  /**
   * <code>MF = 663;</code>
   */
  public static final int MF_VALUE = 663;
  /**
   * <code>MG = 450;</code>
   */
  public static final int MG_VALUE = 450;
  /**
   * <code>MH = 584;</code>
   */
  public static final int MH_VALUE = 584;
  /**
   * <code>MK = 807;</code>
   */
  public static final int MK_VALUE = 807;
  /**
   * <code>ML = 466;</code>
   */
  public static final int ML_VALUE = 466;
  /**
   * <code>MM = 104;</code>
   */
  public static final int MM_VALUE = 104;
  /**
   * <code>MN = 496;</code>
   */
  public static final int MN_VALUE = 496;
  /**
   * <code>MO = 446;</code>
   */
  public static final int MO_VALUE = 446;
  /**
   * <code>MP = 580;</code>
   */
  public static final int MP_VALUE = 580;
  /**
   * <code>MQ = 474;</code>
   */
  public static final int MQ_VALUE = 474;
  /**
   * <code>MR = 478;</code>
   */
  public static final int MR_VALUE = 478;
  /**
   * <code>MS = 500;</code>
   */
  public static final int MS_VALUE = 500;
  /**
   * <code>MT = 470;</code>
   */
  public static final int MT_VALUE = 470;
  /**
   * <code>MU = 480;</code>
   */
  public static final int MU_VALUE = 480;
  /**
   * <code>MV = 462;</code>
   */
  public static final int MV_VALUE = 462;
  /**
   * <code>MW = 454;</code>
   */
  public static final int MW_VALUE = 454;
  /**
   * <code>MX = 484;</code>
   */
  public static final int MX_VALUE = 484;
  /**
   * <code>MY = 458;</code>
   */
  public static final int MY_VALUE = 458;
  /**
   * <code>MZ = 508;</code>
   */
  public static final int MZ_VALUE = 508;
  /**
   * <code>NA = 516;</code>
   */
  public static final int NA_VALUE = 516;
  /**
   * <code>NC = 540;</code>
   */
  public static final int NC_VALUE = 540;
  /**
   * <code>NE = 562;</code>
   */
  public static final int NE_VALUE = 562;
  /**
   * <code>NF = 574;</code>
   */
  public static final int NF_VALUE = 574;
  /**
   * <code>NG = 566;</code>
   */
  public static final int NG_VALUE = 566;
  /**
   * <code>NI = 558;</code>
   */
  public static final int NI_VALUE = 558;
  /**
   * <code>NL = 528;</code>
   */
  public static final int NL_VALUE = 528;
  /**
   * <code>NO = 578;</code>
   */
  public static final int NO_VALUE = 578;
  /**
   * <code>NP = 524;</code>
   */
  public static final int NP_VALUE = 524;
  /**
   * <code>NR = 520;</code>
   */
  public static final int NR_VALUE = 520;
  /**
   * <code>NU = 570;</code>
   */
  public static final int NU_VALUE = 570;
  /**
   * <code>NZ = 554;</code>
   */
  public static final int NZ_VALUE = 554;
  /**
   * <code>OM = 512;</code>
   */
  public static final int OM_VALUE = 512;
  /**
   * <code>PA = 591;</code>
   */
  public static final int PA_VALUE = 591;
  /**
   * <code>PE = 604;</code>
   */
  public static final int PE_VALUE = 604;
  /**
   * <code>PF = 258;</code>
   */
  public static final int PF_VALUE = 258;
  /**
   * <code>PG = 598;</code>
   */
  public static final int PG_VALUE = 598;
  /**
   * <code>PH = 608;</code>
   */
  public static final int PH_VALUE = 608;
  /**
   * <code>PK = 586;</code>
   */
  public static final int PK_VALUE = 586;
  /**
   * <code>PL = 616;</code>
   */
  public static final int PL_VALUE = 616;
  /**
   * <code>PM = 666;</code>
   */
  public static final int PM_VALUE = 666;
  /**
   * <code>PN = 612;</code>
   */
  public static final int PN_VALUE = 612;
  /**
   * <code>PR = 630;</code>
   */
  public static final int PR_VALUE = 630;
  /**
   * <code>PS = 275;</code>
   */
  public static final int PS_VALUE = 275;
  /**
   * <code>PT = 620;</code>
   */
  public static final int PT_VALUE = 620;
  /**
   * <code>PW = 585;</code>
   */
  public static final int PW_VALUE = 585;
  /**
   * <code>PY = 600;</code>
   */
  public static final int PY_VALUE = 600;
  /**
   * <code>QA = 634;</code>
   */
  public static final int QA_VALUE = 634;
  /**
   * <code>RE = 638;</code>
   */
  public static final int RE_VALUE = 638;
  /**
   * <code>RO = 642;</code>
   */
  public static final int RO_VALUE = 642;
  /**
   * <code>RS = 688;</code>
   */
  public static final int RS_VALUE = 688;
  /**
   * <code>RU = 643;</code>
   */
  public static final int RU_VALUE = 643;
  /**
   * <code>RW = 646;</code>
   */
  public static final int RW_VALUE = 646;
  /**
   * <code>SA = 682;</code>
   */
  public static final int SA_VALUE = 682;
  /**
   * <code>SB = 90;</code>
   */
  public static final int SB_VALUE = 90;
  /**
   * <code>SC = 690;</code>
   */
  public static final int SC_VALUE = 690;
  /**
   * <code>SD = 736;</code>
   */
  public static final int SD_VALUE = 736;
  /**
   * <code>SE = 752;</code>
   */
  public static final int SE_VALUE = 752;
  /**
   * <code>SG = 702;</code>
   */
  public static final int SG_VALUE = 702;
  /**
   * <code>SH = 654;</code>
   */
  public static final int SH_VALUE = 654;
  /**
   * <code>SI = 705;</code>
   */
  public static final int SI_VALUE = 705;
  /**
   * <code>SJ = 744;</code>
   */
  public static final int SJ_VALUE = 744;
  /**
   * <code>SK = 703;</code>
   */
  public static final int SK_VALUE = 703;
  /**
   * <code>SL = 694;</code>
   */
  public static final int SL_VALUE = 694;
  /**
   * <code>SM = 674;</code>
   */
  public static final int SM_VALUE = 674;
  /**
   * <code>SN = 686;</code>
   */
  public static final int SN_VALUE = 686;
  /**
   * <code>SO = 706;</code>
   */
  public static final int SO_VALUE = 706;
  /**
   * <code>SR = 740;</code>
   */
  public static final int SR_VALUE = 740;
  /**
   * <code>SS = 728;</code>
   */
  public static final int SS_VALUE = 728;
  /**
   * <code>ST = 678;</code>
   */
  public static final int ST_VALUE = 678;
  /**
   * <code>SV = 222;</code>
   */
  public static final int SV_VALUE = 222;
  /**
   * <code>SX = 534;</code>
   */
  public static final int SX_VALUE = 534;
  /**
   * <code>SY = 760;</code>
   */
  public static final int SY_VALUE = 760;
  /**
   * <code>SZ = 748;</code>
   */
  public static final int SZ_VALUE = 748;
  /**
   * <code>TC = 796;</code>
   */
  public static final int TC_VALUE = 796;
  /**
   * <code>TD = 148;</code>
   */
  public static final int TD_VALUE = 148;
  /**
   * <code>TF = 260;</code>
   */
  public static final int TF_VALUE = 260;
  /**
   * <code>TG = 768;</code>
   */
  public static final int TG_VALUE = 768;
  /**
   * <code>TH = 764;</code>
   */
  public static final int TH_VALUE = 764;
  /**
   * <code>TJ = 762;</code>
   */
  public static final int TJ_VALUE = 762;
  /**
   * <code>TK = 772;</code>
   */
  public static final int TK_VALUE = 772;
  /**
   * <code>TL = 626;</code>
   */
  public static final int TL_VALUE = 626;
  /**
   * <code>TM = 795;</code>
   */
  public static final int TM_VALUE = 795;
  /**
   * <code>TN = 788;</code>
   */
  public static final int TN_VALUE = 788;
  /**
   * <code>TO = 776;</code>
   */
  public static final int TO_VALUE = 776;
  /**
   * <code>TR = 792;</code>
   */
  public static final int TR_VALUE = 792;
  /**
   * <code>TT = 780;</code>
   */
  public static final int TT_VALUE = 780;
  /**
   * <code>TV = 798;</code>
   */
  public static final int TV_VALUE = 798;
  /**
   * <code>TW = 158;</code>
   */
  public static final int TW_VALUE = 158;
  /**
   * <code>TZ = 834;</code>
   */
  public static final int TZ_VALUE = 834;
  /**
   * <code>UA = 804;</code>
   */
  public static final int UA_VALUE = 804;
  /**
   * <code>UG = 800;</code>
   */
  public static final int UG_VALUE = 800;
  /**
   * <code>UM = 581;</code>
   */
  public static final int UM_VALUE = 581;
  /**
   * <code>US = 840;</code>
   */
  public static final int US_VALUE = 840;
  /**
   * <code>UY = 858;</code>
   */
  public static final int UY_VALUE = 858;
  /**
   * <code>UZ = 860;</code>
   */
  public static final int UZ_VALUE = 860;
  /**
   * <code>VA = 336;</code>
   */
  public static final int VA_VALUE = 336;
  /**
   * <code>VC = 670;</code>
   */
  public static final int VC_VALUE = 670;
  /**
   * <code>VE = 862;</code>
   */
  public static final int VE_VALUE = 862;
  /**
   * <code>VG = 92;</code>
   */
  public static final int VG_VALUE = 92;
  /**
   * <code>VI = 850;</code>
   */
  public static final int VI_VALUE = 850;
  /**
   * <code>VN = 704;</code>
   */
  public static final int VN_VALUE = 704;
  /**
   * <code>VU = 548;</code>
   */
  public static final int VU_VALUE = 548;
  /**
   * <code>WF = 876;</code>
   */
  public static final int WF_VALUE = 876;
  /**
   * <code>WS = 882;</code>
   */
  public static final int WS_VALUE = 882;
  /**
   * <code>YE = 887;</code>
   */
  public static final int YE_VALUE = 887;
  /**
   * <code>YT = 175;</code>
   */
  public static final int YT_VALUE = 175;
  /**
   * <code>ZA = 710;</code>
   */
  public static final int ZA_VALUE = 710;
  /**
   * <code>ZM = 894;</code>
   */
  public static final int ZM_VALUE = 894;
  /**
   * <code>ZW = 716;</code>
   */
  public static final int ZW_VALUE = 716;


  public final int getNumber() {
    return value;
  }

  public static Country valueOf(int value) {
    switch (value) {
      case 0: return ZZ;
      case 20: return AD;
      case 784: return AE;
      case 4: return AF;
      case 28: return AG;
      case 660: return AI;
      case 8: return AL;
      case 51: return AM;
      case 24: return AO;
      case 10: return AQ;
      case 32: return AR;
      case 16: return AS;
      case 40: return AT;
      case 36: return AU;
      case 533: return AW;
      case 248: return AX;
      case 31: return AZ;
      case 70: return BA;
      case 52: return BB;
      case 50: return BD;
      case 56: return BE;
      case 854: return BF;
      case 100: return BG;
      case 48: return BH;
      case 108: return BI;
      case 204: return BJ;
      case 652: return BL;
      case 60: return BM;
      case 96: return BN;
      case 68: return BO;
      case 535: return BQ;
      case 76: return BR;
      case 44: return BS;
      case 64: return BT;
      case 74: return BV;
      case 72: return BW;
      case 112: return BY;
      case 84: return BZ;
      case 124: return CA;
      case 166: return CC;
      case 180: return CD;
      case 140: return CF;
      case 178: return CG;
      case 756: return CH;
      case 384: return CI;
      case 184: return CK;
      case 152: return CL;
      case 120: return CM;
      case 156: return CN;
      case 170: return CO;
      case 188: return CR;
      case 192: return CU;
      case 132: return CV;
      case 531: return CW;
      case 162: return CX;
      case 196: return CY;
      case 203: return CZ;
      case 276: return DE;
      case 262: return DJ;
      case 208: return DK;
      case 212: return DM;
      case 214: return DO;
      case 12: return DZ;
      case 218: return EC;
      case 233: return EE;
      case 818: return EG;
      case 732: return EH;
      case 232: return ER;
      case 724: return ES;
      case 231: return ET;
      case 246: return FI;
      case 242: return FJ;
      case 238: return FK;
      case 583: return FM;
      case 234: return FO;
      case 250: return FR;
      case 266: return GA;
      case 826: return GB;
      case 308: return GD;
      case 268: return GE;
      case 254: return GF;
      case 831: return GG;
      case 288: return GH;
      case 292: return GI;
      case 304: return GL;
      case 270: return GM;
      case 324: return GN;
      case 312: return GP;
      case 226: return GQ;
      case 300: return GR;
      case 239: return GS;
      case 320: return GT;
      case 316: return GU;
      case 624: return GW;
      case 328: return GY;
      case 344: return HK;
      case 334: return HM;
      case 340: return HN;
      case 191: return HR;
      case 332: return HT;
      case 348: return HU;
      case 360: return ID;
      case 372: return IE;
      case 376: return IL;
      case 833: return IM;
      case 356: return IN;
      case 86: return IO;
      case 368: return IQ;
      case 364: return IR;
      case 352: return IS;
      case 380: return IT;
      case 832: return JE;
      case 388: return JM;
      case 400: return JO;
      case 392: return JP;
      case 404: return KE;
      case 417: return KG;
      case 116: return KH;
      case 296: return KI;
      case 174: return KM;
      case 659: return KN;
      case 408: return KP;
      case 410: return KR;
      case 414: return KW;
      case 136: return KY;
      case 398: return KZ;
      case 418: return LA;
      case 422: return LB;
      case 662: return LC;
      case 438: return LI;
      case 144: return LK;
      case 430: return LR;
      case 426: return LS;
      case 440: return LT;
      case 442: return LU;
      case 428: return LV;
      case 434: return LY;
      case 504: return MA;
      case 492: return MC;
      case 498: return MD;
      case 499: return ME;
      case 663: return MF;
      case 450: return MG;
      case 584: return MH;
      case 807: return MK;
      case 466: return ML;
      case 104: return MM;
      case 496: return MN;
      case 446: return MO;
      case 580: return MP;
      case 474: return MQ;
      case 478: return MR;
      case 500: return MS;
      case 470: return MT;
      case 480: return MU;
      case 462: return MV;
      case 454: return MW;
      case 484: return MX;
      case 458: return MY;
      case 508: return MZ;
      case 516: return NA;
      case 540: return NC;
      case 562: return NE;
      case 574: return NF;
      case 566: return NG;
      case 558: return NI;
      case 528: return NL;
      case 578: return NO;
      case 524: return NP;
      case 520: return NR;
      case 570: return NU;
      case 554: return NZ;
      case 512: return OM;
      case 591: return PA;
      case 604: return PE;
      case 258: return PF;
      case 598: return PG;
      case 608: return PH;
      case 586: return PK;
      case 616: return PL;
      case 666: return PM;
      case 612: return PN;
      case 630: return PR;
      case 275: return PS;
      case 620: return PT;
      case 585: return PW;
      case 600: return PY;
      case 634: return QA;
      case 638: return RE;
      case 642: return RO;
      case 688: return RS;
      case 643: return RU;
      case 646: return RW;
      case 682: return SA;
      case 90: return SB;
      case 690: return SC;
      case 736: return SD;
      case 752: return SE;
      case 702: return SG;
      case 654: return SH;
      case 705: return SI;
      case 744: return SJ;
      case 703: return SK;
      case 694: return SL;
      case 674: return SM;
      case 686: return SN;
      case 706: return SO;
      case 740: return SR;
      case 728: return SS;
      case 678: return ST;
      case 222: return SV;
      case 534: return SX;
      case 760: return SY;
      case 748: return SZ;
      case 796: return TC;
      case 148: return TD;
      case 260: return TF;
      case 768: return TG;
      case 764: return TH;
      case 762: return TJ;
      case 772: return TK;
      case 626: return TL;
      case 795: return TM;
      case 788: return TN;
      case 776: return TO;
      case 792: return TR;
      case 780: return TT;
      case 798: return TV;
      case 158: return TW;
      case 834: return TZ;
      case 804: return UA;
      case 800: return UG;
      case 581: return UM;
      case 840: return US;
      case 858: return UY;
      case 860: return UZ;
      case 336: return VA;
      case 670: return VC;
      case 862: return VE;
      case 92: return VG;
      case 850: return VI;
      case 704: return VN;
      case 548: return VU;
      case 876: return WF;
      case 882: return WS;
      case 887: return YE;
      case 175: return YT;
      case 710: return ZA;
      case 894: return ZM;
      case 716: return ZW;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Country>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static com.google.protobuf.Internal.EnumLiteMap<Country>
      internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Country>() {
          public Country findValueByNumber(int number) {
            return Country.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.squareup.protos.connect.v3.resources.CountryOuterClass.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final Country[] VALUES = values();

  public static Country valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private Country(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:squareup.connect.v3.resources.Country)
}

