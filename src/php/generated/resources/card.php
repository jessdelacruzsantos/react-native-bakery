<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: squareup/connect/v3/resources/card.proto
//   Date: 2015-12-02 23:30:27

namespace squareup\connect\v3\resources\Card {

  class Brand extends \DrSlump\Protobuf\Enum {
    const OTHER_BRAND = 0;
    const VISA = 1;
    const MASTERCARD = 2;
    const AMERICAN_EXPRESS = 3;
    const DISCOVER = 4;
    const DISCOVER_DINERS = 5;
    const JCB = 6;
    const CHINA_UNIONPAY = 7;
    const SQUARE_GIFT_CARD = 8;
  }
}
namespace squareup\connect\v3\resources {

  class Card extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var int - \squareup\connect\v3\resources\Card\Brand */
    public $card_brand = null;
    
    /**  @var string */
    public $last_4 = null;
    
    /**  @var int */
    public $exp_month = null;
    
    /**  @var int */
    public $exp_year = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'squareup.connect.v3.resources.Card');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM card_brand = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "card_brand";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\squareup\connect\v3\resources\Card\Brand';
      $descriptor->addField($f);

      // OPTIONAL STRING last_4 = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "last_4";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 exp_month = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "exp_month";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 exp_year = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "exp_year";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \squareup\connect\v3\resources\Card
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\Card
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <card_brand> has a value
     *
     * @return boolean
     */
    public function hasCardBrand(){
      return $this->_has(2);
    }
    
    /**
     * Clear <card_brand> value
     *
     * @return \squareup\connect\v3\resources\Card
     */
    public function clearCardBrand(){
      return $this->_clear(2);
    }
    
    /**
     * Get <card_brand> value
     *
     * @return int - \squareup\connect\v3\resources\Card\Brand
     */
    public function getCardBrand(){
      return $this->_get(2);
    }
    
    /**
     * Set <card_brand> value
     *
     * @param int - \squareup\connect\v3\resources\Card\Brand $value
     * @return \squareup\connect\v3\resources\Card
     */
    public function setCardBrand( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <last_4> has a value
     *
     * @return boolean
     */
    public function hasLast4(){
      return $this->_has(3);
    }
    
    /**
     * Clear <last_4> value
     *
     * @return \squareup\connect\v3\resources\Card
     */
    public function clearLast4(){
      return $this->_clear(3);
    }
    
    /**
     * Get <last_4> value
     *
     * @return string
     */
    public function getLast4(){
      return $this->_get(3);
    }
    
    /**
     * Set <last_4> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\Card
     */
    public function setLast4( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <exp_month> has a value
     *
     * @return boolean
     */
    public function hasExpMonth(){
      return $this->_has(4);
    }
    
    /**
     * Clear <exp_month> value
     *
     * @return \squareup\connect\v3\resources\Card
     */
    public function clearExpMonth(){
      return $this->_clear(4);
    }
    
    /**
     * Get <exp_month> value
     *
     * @return int
     */
    public function getExpMonth(){
      return $this->_get(4);
    }
    
    /**
     * Set <exp_month> value
     *
     * @param int $value
     * @return \squareup\connect\v3\resources\Card
     */
    public function setExpMonth( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <exp_year> has a value
     *
     * @return boolean
     */
    public function hasExpYear(){
      return $this->_has(5);
    }
    
    /**
     * Clear <exp_year> value
     *
     * @return \squareup\connect\v3\resources\Card
     */
    public function clearExpYear(){
      return $this->_clear(5);
    }
    
    /**
     * Get <exp_year> value
     *
     * @return int
     */
    public function getExpYear(){
      return $this->_get(5);
    }
    
    /**
     * Set <exp_year> value
     *
     * @param int $value
     * @return \squareup\connect\v3\resources\Card
     */
    public function setExpYear( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace squareup\connect\v3\resources {

  class CardData extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $number = null;
    
    /**  @var int */
    public $exp_month = null;
    
    /**  @var int */
    public $exp_year = null;
    
    /**  @var string */
    public $cvv = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var \squareup\connect\v3\resources\Address */
    public $billing_address = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'squareup.connect.v3.resources.CardData');

      // OPTIONAL STRING number = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "number";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 exp_month = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "exp_month";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 exp_year = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "exp_year";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING cvv = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "cvv";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE billing_address = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "billing_address";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\squareup\connect\v3\resources\Address';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <number> has a value
     *
     * @return boolean
     */
    public function hasNumber(){
      return $this->_has(1);
    }
    
    /**
     * Clear <number> value
     *
     * @return \squareup\connect\v3\resources\CardData
     */
    public function clearNumber(){
      return $this->_clear(1);
    }
    
    /**
     * Get <number> value
     *
     * @return string
     */
    public function getNumber(){
      return $this->_get(1);
    }
    
    /**
     * Set <number> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\CardData
     */
    public function setNumber( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <exp_month> has a value
     *
     * @return boolean
     */
    public function hasExpMonth(){
      return $this->_has(2);
    }
    
    /**
     * Clear <exp_month> value
     *
     * @return \squareup\connect\v3\resources\CardData
     */
    public function clearExpMonth(){
      return $this->_clear(2);
    }
    
    /**
     * Get <exp_month> value
     *
     * @return int
     */
    public function getExpMonth(){
      return $this->_get(2);
    }
    
    /**
     * Set <exp_month> value
     *
     * @param int $value
     * @return \squareup\connect\v3\resources\CardData
     */
    public function setExpMonth( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <exp_year> has a value
     *
     * @return boolean
     */
    public function hasExpYear(){
      return $this->_has(3);
    }
    
    /**
     * Clear <exp_year> value
     *
     * @return \squareup\connect\v3\resources\CardData
     */
    public function clearExpYear(){
      return $this->_clear(3);
    }
    
    /**
     * Get <exp_year> value
     *
     * @return int
     */
    public function getExpYear(){
      return $this->_get(3);
    }
    
    /**
     * Set <exp_year> value
     *
     * @param int $value
     * @return \squareup\connect\v3\resources\CardData
     */
    public function setExpYear( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <cvv> has a value
     *
     * @return boolean
     */
    public function hasCvv(){
      return $this->_has(4);
    }
    
    /**
     * Clear <cvv> value
     *
     * @return \squareup\connect\v3\resources\CardData
     */
    public function clearCvv(){
      return $this->_clear(4);
    }
    
    /**
     * Get <cvv> value
     *
     * @return string
     */
    public function getCvv(){
      return $this->_get(4);
    }
    
    /**
     * Set <cvv> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\CardData
     */
    public function setCvv( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(5);
    }
    
    /**
     * Clear <name> value
     *
     * @return \squareup\connect\v3\resources\CardData
     */
    public function clearName(){
      return $this->_clear(5);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(5);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\CardData
     */
    public function setName( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <billing_address> has a value
     *
     * @return boolean
     */
    public function hasBillingAddress(){
      return $this->_has(6);
    }
    
    /**
     * Clear <billing_address> value
     *
     * @return \squareup\connect\v3\resources\CardData
     */
    public function clearBillingAddress(){
      return $this->_clear(6);
    }
    
    /**
     * Get <billing_address> value
     *
     * @return \squareup\connect\v3\resources\Address
     */
    public function getBillingAddress(){
      return $this->_get(6);
    }
    
    /**
     * Set <billing_address> value
     *
     * @param \squareup\connect\v3\resources\Address $value
     * @return \squareup\connect\v3\resources\CardData
     */
    public function setBillingAddress(\squareup\connect\v3\resources\Address $value){
      return $this->_set(6, $value);
    }
  }
}

