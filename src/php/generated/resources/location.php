<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: squareup/connect/v3/resources/location.proto
//   Date: 2015-10-27 19:47:03

namespace squareup\connect\v3\resources\Location {

  class Capability extends \DrSlump\Protobuf\Enum {
    const CREDIT_CARD_PROCESSING = 1;
  }
}
namespace squareup\connect\v3\resources {

  class Location extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $business_id = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var \squareup\connect\v3\resources\Address */
    public $address = null;
    
    /**  @var string */
    public $timezone = null;
    
    /**  @var int - \squareup\connect\v3\resources\Location\Capability[]  */
    public $capabilities = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'squareup.connect.v3.resources.Location');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING business_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "business_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE address = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "address";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\squareup\connect\v3\resources\Address';
      $descriptor->addField($f);

      // OPTIONAL STRING timezone = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "timezone";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED ENUM capabilities = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "capabilities";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\squareup\connect\v3\resources\Location\Capability';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \squareup\connect\v3\resources\Location
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <business_id> has a value
     *
     * @return boolean
     */
    public function hasBusinessId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <business_id> value
     *
     * @return \squareup\connect\v3\resources\Location
     */
    public function clearBusinessId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <business_id> value
     *
     * @return string
     */
    public function getBusinessId(){
      return $this->_get(2);
    }
    
    /**
     * Set <business_id> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function setBusinessId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <name> value
     *
     * @return \squareup\connect\v3\resources\Location
     */
    public function clearName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(3);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function setName( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <address> has a value
     *
     * @return boolean
     */
    public function hasAddress(){
      return $this->_has(4);
    }
    
    /**
     * Clear <address> value
     *
     * @return \squareup\connect\v3\resources\Location
     */
    public function clearAddress(){
      return $this->_clear(4);
    }
    
    /**
     * Get <address> value
     *
     * @return \squareup\connect\v3\resources\Address
     */
    public function getAddress(){
      return $this->_get(4);
    }
    
    /**
     * Set <address> value
     *
     * @param \squareup\connect\v3\resources\Address $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function setAddress(\squareup\connect\v3\resources\Address $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <timezone> has a value
     *
     * @return boolean
     */
    public function hasTimezone(){
      return $this->_has(5);
    }
    
    /**
     * Clear <timezone> value
     *
     * @return \squareup\connect\v3\resources\Location
     */
    public function clearTimezone(){
      return $this->_clear(5);
    }
    
    /**
     * Get <timezone> value
     *
     * @return string
     */
    public function getTimezone(){
      return $this->_get(5);
    }
    
    /**
     * Set <timezone> value
     *
     * @param string $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function setTimezone( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <capabilities> has a value
     *
     * @return boolean
     */
    public function hasCapabilities(){
      return $this->_has(10);
    }
    
    /**
     * Clear <capabilities> value
     *
     * @return \squareup\connect\v3\resources\Location
     */
    public function clearCapabilities(){
      return $this->_clear(10);
    }
    
    /**
     * Get <capabilities> value
     *
     * @param int $idx
     * @return int - \squareup\connect\v3\resources\Location\Capability
     */
    public function getCapabilities($idx = NULL){
      return $this->_get(10, $idx);
    }
    
    /**
     * Set <capabilities> value
     *
     * @param int - \squareup\connect\v3\resources\Location\Capability $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function setCapabilities( $value, $idx = NULL){
      return $this->_set(10, $value, $idx);
    }
    
    /**
     * Get all elements of <capabilities>
     *
     * @return int - \squareup\connect\v3\resources\Location\Capability[]
     */
    public function getCapabilitiesList(){
     return $this->_get(10);
    }
    
    /**
     * Add a new element to <capabilities>
     *
     * @param int - \squareup\connect\v3\resources\Location\Capability $value
     * @return \squareup\connect\v3\resources\Location
     */
    public function addCapabilities( $value){
     return $this->_add(10, $value);
    }
  }
}

