<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: squareup/connect/v3/resources/money.proto
//   Date: 2015-10-27 19:47:04

namespace squareup\connect\v3\resources {

  class Currency extends \DrSlump\Protobuf\Enum {
    const AED = 784;
    const AFN = 971;
    const ALL = 8;
    const AMD = 51;
    const ANG = 532;
    const AOA = 973;
    const ARS = 32;
    const AUD = 36;
    const AWG = 533;
    const AZN = 944;
    const BAM = 977;
    const BBD = 52;
    const BDT = 50;
    const BGN = 975;
    const BHD = 48;
    const BIF = 108;
    const BMD = 60;
    const BND = 96;
    const BOB = 68;
    const BOV = 984;
    const BRL = 986;
    const BSD = 44;
    const BTN = 64;
    const BWP = 72;
    const BYR = 974;
    const BZD = 84;
    const CAD = 124;
    const CDF = 976;
    const CHE = 947;
    const CHF = 756;
    const CHW = 948;
    const CLF = 990;
    const CLP = 152;
    const CNY = 156;
    const COP = 170;
    const COU = 970;
    const CRC = 188;
    const CUC = 931;
    const CUP = 192;
    const CVE = 132;
    const CZK = 203;
    const DJF = 262;
    const DKK = 208;
    const DOP = 214;
    const DZD = 12;
    const EGP = 818;
    const ERN = 232;
    const ETB = 230;
    const EUR = 978;
    const FJD = 242;
    const FKP = 238;
    const GBP = 826;
    const GEL = 981;
    const GHS = 936;
    const GIP = 292;
    const GMD = 270;
    const GNF = 324;
    const GTQ = 320;
    const GYD = 328;
    const HKD = 344;
    const HNL = 340;
    const HRK = 191;
    const HTG = 332;
    const HUF = 348;
    const IDR = 360;
    const ILS = 376;
    const INR = 356;
    const IQD = 368;
    const IRR = 364;
    const ISK = 352;
    const JMD = 388;
    const JOD = 400;
    const JPY = 392;
    const KES = 404;
    const KGS = 417;
    const KHR = 116;
    const KMF = 174;
    const KPW = 408;
    const KRW = 410;
    const KWD = 414;
    const KYD = 136;
    const KZT = 398;
    const LAK = 418;
    const LBP = 422;
    const LKR = 144;
    const LRD = 430;
    const LSL = 426;
    const LTL = 440;
    const LVL = 428;
    const LYD = 434;
    const MAD = 504;
    const MDL = 498;
    const MGA = 969;
    const MKD = 807;
    const MMK = 104;
    const MNT = 496;
    const MOP = 446;
    const MRO = 478;
    const MUR = 480;
    const MVR = 462;
    const MWK = 454;
    const MXN = 484;
    const MXV = 979;
    const MYR = 458;
    const MZN = 943;
    const NAD = 516;
    const NGN = 566;
    const NIO = 558;
    const NOK = 578;
    const NPR = 524;
    const NZD = 554;
    const OMR = 512;
    const PAB = 590;
    const PEN = 604;
    const PGK = 598;
    const PHP = 608;
    const PKR = 586;
    const PLN = 985;
    const PYG = 600;
    const QAR = 634;
    const RON = 946;
    const RSD = 941;
    const RUB = 643;
    const RWF = 646;
    const SAR = 682;
    const SBD = 90;
    const SCR = 690;
    const SDG = 938;
    const SEK = 752;
    const SGD = 702;
    const SHP = 654;
    const SLL = 694;
    const SOS = 706;
    const SRD = 968;
    const SSP = 728;
    const STD = 678;
    const SVC = 222;
    const SYP = 760;
    const SZL = 748;
    const THB = 764;
    const TJS = 972;
    const TMT = 934;
    const TND = 788;
    const TOP = 776;
    const TRY = 949;
    const TTD = 780;
    const TWD = 901;
    const TZS = 834;
    const UAH = 980;
    const UGX = 800;
    const USD = 840;
    const USN = 997;
    const USS = 998;
    const UYI = 940;
    const UYU = 858;
    const UZS = 860;
    const VEF = 937;
    const VND = 704;
    const VUV = 548;
    const WST = 882;
    const XAF = 950;
    const XAG = 961;
    const XAU = 959;
    const XBA = 955;
    const XBB = 956;
    const XBC = 957;
    const XBD = 958;
    const XCD = 951;
    const XDR = 960;
    const XOF = 952;
    const XPD = 964;
    const XPF = 953;
    const XPT = 962;
    const XTS = 963;
    const XXX = 999;
    const YER = 886;
    const ZAR = 710;
    const ZMK = 894;
    const ZMW = 967;
    const BTC = 1001;
  }
}
namespace squareup\connect\v3\resources {

  class Money extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $amount = null;
    
    /**  @var int - \squareup\connect\v3\resources\Currency */
    public $currency = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'squareup.connect.v3.resources.Money');

      // OPTIONAL INT64 amount = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "amount";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM currency = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "currency";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\squareup\connect\v3\resources\Currency';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <amount> has a value
     *
     * @return boolean
     */
    public function hasAmount(){
      return $this->_has(1);
    }
    
    /**
     * Clear <amount> value
     *
     * @return \squareup\connect\v3\resources\Money
     */
    public function clearAmount(){
      return $this->_clear(1);
    }
    
    /**
     * Get <amount> value
     *
     * @return int
     */
    public function getAmount(){
      return $this->_get(1);
    }
    
    /**
     * Set <amount> value
     *
     * @param int $value
     * @return \squareup\connect\v3\resources\Money
     */
    public function setAmount( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <currency> has a value
     *
     * @return boolean
     */
    public function hasCurrency(){
      return $this->_has(2);
    }
    
    /**
     * Clear <currency> value
     *
     * @return \squareup\connect\v3\resources\Money
     */
    public function clearCurrency(){
      return $this->_clear(2);
    }
    
    /**
     * Get <currency> value
     *
     * @return int - \squareup\connect\v3\resources\Currency
     */
    public function getCurrency(){
      return $this->_get(2);
    }
    
    /**
     * Set <currency> value
     *
     * @param int - \squareup\connect\v3\resources\Currency $value
     * @return \squareup\connect\v3\resources\Money
     */
    public function setCurrency( $value){
      return $this->_set(2, $value);
    }
  }
}

