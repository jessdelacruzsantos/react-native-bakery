<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: squareup/connect/v3/actions/time_range_params.proto
//   Date: 2016-01-15 23:06:16

namespace squareup\connect\v3\actions\OrderedTimeRange {

  class Sort extends \DrSlump\Protobuf\Enum {
    const DESC = 0;
    const ASC = 1;
  }
}
namespace squareup\connect\v3\actions {

  class OrderedTimeRange extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $begin_time = null;
    
    /**  @var string */
    public $end_time = null;
    
    /**  @var int - \squareup\connect\v3\actions\OrderedTimeRange\Sort */
    public $sort = \squareup\connect\v3\actions\OrderedTimeRange\Sort::DESC;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'squareup.connect.v3.actions.OrderedTimeRange');

      // REQUIRED STRING begin_time = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "begin_time";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED STRING end_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "end_time";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED ENUM sort = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "sort";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\squareup\connect\v3\actions\OrderedTimeRange\Sort';
      $f->default   = \squareup\connect\v3\actions\OrderedTimeRange\Sort::DESC;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <begin_time> has a value
     *
     * @return boolean
     */
    public function hasBeginTime(){
      return $this->_has(1);
    }
    
    /**
     * Clear <begin_time> value
     *
     * @return \squareup\connect\v3\actions\OrderedTimeRange
     */
    public function clearBeginTime(){
      return $this->_clear(1);
    }
    
    /**
     * Get <begin_time> value
     *
     * @return string
     */
    public function getBeginTime(){
      return $this->_get(1);
    }
    
    /**
     * Set <begin_time> value
     *
     * @param string $value
     * @return \squareup\connect\v3\actions\OrderedTimeRange
     */
    public function setBeginTime( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <end_time> has a value
     *
     * @return boolean
     */
    public function hasEndTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <end_time> value
     *
     * @return \squareup\connect\v3\actions\OrderedTimeRange
     */
    public function clearEndTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <end_time> value
     *
     * @return string
     */
    public function getEndTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <end_time> value
     *
     * @param string $value
     * @return \squareup\connect\v3\actions\OrderedTimeRange
     */
    public function setEndTime( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <sort> has a value
     *
     * @return boolean
     */
    public function hasSort(){
      return $this->_has(3);
    }
    
    /**
     * Clear <sort> value
     *
     * @return \squareup\connect\v3\actions\OrderedTimeRange
     */
    public function clearSort(){
      return $this->_clear(3);
    }
    
    /**
     * Get <sort> value
     *
     * @return int - \squareup\connect\v3\actions\OrderedTimeRange\Sort
     */
    public function getSort(){
      return $this->_get(3);
    }
    
    /**
     * Set <sort> value
     *
     * @param int - \squareup\connect\v3\actions\OrderedTimeRange\Sort $value
     * @return \squareup\connect\v3\actions\OrderedTimeRange
     */
    public function setSort( $value){
      return $this->_set(3, $value);
    }
  }
}

