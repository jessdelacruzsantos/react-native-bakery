#!/bin/sh
# See tools/api-parser/README.md for full usage notes.

# Abort script at first error, when a command exits with non-zero status
set -o errexit

# Attempt to use undefined variable outputs error message, and forces an exit
set -o nounset

# If set, the return value of a pipeline is the value of the last (rightmost)
# command to exit with a non-zero status, or zero if all commands in the
# pipeline exit successfully.
set -o pipefail

BASE_DIR=$(git rev-parse --show-toplevel)

if [ $# -eq 0 ]; then
	echo "Need to pass in the path to the protos."
	echo "USAGE:"
	echo '  script/api-parser $GOPATH/src/square/up/xp/connect-public-protos/protos/squareup/connect/v2/'
	echo
	exit 1
fi

(
    cd "$BASE_DIR/tools/api-parser"

    echo "Compiling apiparser"
    if ! mvn install > /dev/null
    then
        echo "Failed to compile apiparser."
        echo "To debug, manually run \`(cd tools/api-parser && mvn install)\`"
        exit 1
    fi

    java -jar target/apiparser-1.0-SNAPSHOT.jar "$@" -mergev1 "../../api_v1.json"
)

# Output commands being run

OUTPUT_DIR="$BASE_DIR/api.json.d"
if [ ! -d "$OUTPUT_DIR" ]; then
    mkdir -p "$OUTPUT_DIR"
fi

rm -f $BASE_DIR/api.json.d/*.json
mv $BASE_DIR/tools/api-parser/*.json $BASE_DIR/api.json.d

ls -1 $BASE_DIR/api.json.d/*.json
