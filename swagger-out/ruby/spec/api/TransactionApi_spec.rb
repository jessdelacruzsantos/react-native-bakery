=begin
Square Connect API

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require 'spec_helper'
require 'json'

# Unit tests for SquareConnect::TransactionApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TransactionApi' do
  before do
    # run before each test
    @instance = SquareConnect::TransactionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TransactionApi' do
    it 'should create an instact of TransactionApi' do
      @instance.should be_a(SquareConnect::TransactionApi)
    end
  end

  # unit tests for list_transactions
  # ListTransactions
  # Lists transactions for a particular location.\n\nWhen making a request to this endpoint, your request body **must** include either the `cursor` parameter, or it must\ninclude all three of `begin_time`, `end_time`, and `sort`.
  # @param authorization The value to provide in the Authorization header of\nyour request. This value should follow the format `Bearer YOUR_ACCESS_TOKEN_HERE`.
  # @param location_id The ID of the location to list transactions for.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :begin_time The beginning of the requested reporting period, in RFC 3339 format.
  # @option opts [String] :end_time The end of the requested reporting period, in RFC 3339 format.
  # @option opts [String] :sort_order The order in which results are listed in the response (`ASC` for\nchronological, `DESC` for reverse-chronological).
  # @option opts [String] :cursor A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.
  # @return [ListTransactionsResponse]
  describe 'list_transactions test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for charge
  # Charge
  # Charges a card represented by a token.
  # @param authorization The value to provide in the Authorization header of\nyour request. This value should follow the format `Bearer YOUR_ACCESS_TOKEN_HERE`.
  # @param location_id The ID of the location to associate the transaction with.
  # @param body An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.
  # @param [Hash] opts the optional parameters
  # @return [ChargeResponse]
  describe 'charge test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for retrieve_transaction
  # RetrieveTransaction
  # Retrieves details for a single transaction.
  # @param authorization The value to provide in the Authorization header of\nyour request. This value should follow the format `Bearer YOUR_ACCESS_TOKEN_HERE`.
  # @param location_id 
  # @param transaction_id 
  # @param [Hash] opts the optional parameters
  # @return [RetrieveTransactionResponse]
  describe 'retrieve_transaction test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for capture_transaction
  # CaptureTransaction
  # Captures a transaction that was created with the **Charge**\nendpoint with a `delay_capture` value of `true`.
  # @param authorization The value to provide in the Authorization header of\nyour request. This value should follow the format `Bearer YOUR_ACCESS_TOKEN_HERE`.
  # @param location_id 
  # @param transaction_id 
  # @param [Hash] opts the optional parameters
  # @return [CaptureTransactionResponse]
  describe 'capture_transaction test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for void_transaction
  # VoidTransaction
  # Cancels a transaction that was created with the **Charge**\nendpoint with a `delay_capture` value of `true`.
  # @param authorization The value to provide in the Authorization header of\nyour request. This value should follow the format `Bearer YOUR_ACCESS_TOKEN_HERE`.
  # @param location_id 
  # @param transaction_id 
  # @param [Hash] opts the optional parameters
  # @return [VoidTransactionResponse]
  describe 'void_transaction test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
